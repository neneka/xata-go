{"openapi":"3.0.0","info":{"title":"xata-auth","description":"Xata.io Auth API","version":"1.0","license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"contact":{"name":"support@xata.io"}},"servers":[{"url":"/","description":""}],"paths":{"/user":{"summary":"User info","description":"This endpoint allows retrieving or updating a given user by their user ID.","get":{"operationId":"getUser","summary":"Get user details","description":"Return details of the user making the request","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserWithID"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Users"]},"put":{"operationId":"updateUser","summary":"Update user info","description":"Update user info","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserWithID"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Users"]},"delete":{"operationId":"deleteUser","summary":"Delete user","description":"Delete the user making the request","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Users"]}},"/user/keys":{"summary":"User API Keys","description":"This endpoint allows interacting with the API keys for a given user.","get":{"operationId":"getUserAPIKeys","summary":"Get the list of user API keys","description":"Retrieve a list of existing user API keys","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"keys":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"createdAt":{"$ref":"#/components/schemas/DateTime"}},"required":["name","createdAt"]}}},"required":["keys"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Authentication"]}},"/user/keys/{key_name}":{"summary":"Single User API Key","description":"This endpoint allows operations on a single API key for a given user.","parameters":[{"$ref":"#/components/parameters/APIKeyNameParam"}],"post":{"operationId":"createUserAPIKey","summary":"Create and return new API key","description":"Create and return new API key","responses":{"201":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"key":{"type":"string"},"createdAt":{"$ref":"#/components/schemas/DateTime"}},"required":["name","key","createdAt"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Authentication"]},"delete":{"operationId":"deleteUserAPIKey","summary":"Delete an existing API key","description":"Delete an existing API key","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Authentication"]}},"/user/oauth/clients":{"summary":"User OAuth Clients","description":"this endpoint allows listing the clients the current user has authorized","get":{"operationId":"getUserOAuthClients","summary":"Get the list of user OAuth Clients","description":"Retrieve the list of OAuth Clients that a user has authorized","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"properties":{"clients":{"type":"array","items":{"$ref":"#/components/schemas/OAuthClientPublicDetails"}}}}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["OAuth"]}},"/user/oauth/clients/{client_id}":{"parameters":[{"$ref":"#/components/parameters/OAuthClientIDParam"}],"delete":{"operationId":"deleteUserOAuthClient","summary":"Delete the oauth client for the user","description":"Delete the oauth client for the user and revoke all access","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["OAuth"]}},"/user/oauth/tokens":{"summary":"User OAuth Access Tokens","description":"this endpoint allows listing the valid access tokens on the current user's account","get":{"operationId":"getUserOAuthAccessTokens","summary":"Get the list of user OAuth Access Tokens","description":"Retrieve the list of valid OAuth Access Tokens on the current user's account","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"properties":{"accessTokens":{"type":"array","items":{"$ref":"#/components/schemas/OAuthAccessToken"}}},"required":["accessTokens"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["OAuth"]}},"/user/oauth/tokens/{token}":{"parameters":[{"$ref":"#/components/parameters/OAuthAccessTokenParam"}],"delete":{"operationId":"deleteOAuthAccessToken","summary":"delete an access token for a third party app","description":"Expires the access token for a third party app","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"409":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["OAuth"]},"patch":{"operationId":"updateOAuthAccessToken","summary":"updates an access token for a third party app","description":"Updates partially the access token for a third party app","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"expires":{"description":"expiration time of the token as a unix timestamp","type":"integer"}},"required":["expires"]}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuthAccessToken"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"409":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["OAuth"]}},"/workspaces":{"summary":"Workspaces","description":"This endpoint enables interacting with specific workspaces within Xata. For more information about workspaces, see the [docs](/concepts/workspaces).","get":{"operationId":"getWorkspacesList","summary":"Get list of workspaces","description":"Retrieve the list of workspaces the user belongs to","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"workspaces":{"type":"array","items":{"type":"object","properties":{"id":{"$ref":"#/components/schemas/WorkspaceID"},"name":{"type":"string"},"slug":{"type":"string"},"role":{"$ref":"#/components/schemas/Role"},"plan":{"$ref":"#/components/schemas/WorkspacePlan"}},"required":["name","role","slug","id","plan"]}}},"required":["workspaces"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]},"post":{"operationId":"createWorkspace","summary":"Create a new workspace","description":"Creates a new workspace with the user requesting it as its single owner.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkspaceMeta"}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Workspace"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]}},"/workspaces/{workspace_id}":{"summary":"Workspace by ID","description":"This endpoint contains operations for a specific workspace, referenced by ID.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"}],"get":{"operationId":"getWorkspace","summary":"Get an existing workspace","description":"Retrieve workspace info from a workspace ID","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Workspace"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]},"put":{"operationId":"updateWorkspace","summary":"Update an existing workspace","description":"Update workspace info","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkspaceMeta"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Workspace"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]},"delete":{"operationId":"deleteWorkspace","summary":"Delete an existing workspace","description":"Delete the workspace with the provided ID","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]}},"/workspaces/{workspace_id}/members":{"summary":"Workspace Members","description":"This endpoint allows operations concerning the members of a given workspace.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"}],"get":{"operationId":"getWorkspaceMembersList","summary":"Get the list members of a workspace","description":"Retrieve the list of members of the given workspace","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkspaceMembers"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]}},"/workspaces/{workspace_id}/members/{user_id}":{"summary":"Specific Workspace Member","description":"This endpoint enables operations on a specific member of a workspace, referenced by their user ID.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"},{"$ref":"#/components/parameters/UserIDParam"}],"put":{"operationId":"updateWorkspaceMemberRole","summary":"Update workspace member role","description":"Update a workspace member role. Workspaces must always have at least one owner, so this operation will fail if trying to remove owner role from the last owner in the workspace.\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"$ref":"#/components/schemas/Role"}},"required":["role"]}}}},"responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]},"delete":{"operationId":"removeWorkspaceMember","summary":"Remove a member from the workspace","description":"Remove the member from the workspace","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Workspaces"]}},"/workspaces/{workspace_id}/invites":{"summary":"Workspace Invites","description":"This endpoint enables working with invites for a given workspace.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"}],"post":{"operationId":"inviteWorkspaceMember","summary":"Invite a user to join the workspace","description":"Invite some user to join the workspace with the given role","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string","format":"email"},"role":{"$ref":"#/components/schemas/Role"}},"required":["email","role"]}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkspaceInvite"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"409":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Invites"]}},"/workspaces/{workspace_id}/invites/{invite_id}":{"summary":"A specific invite within a given workspace","description":"This endpoint enables working with a given invite.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"},{"$ref":"#/components/parameters/InviteIDParam"}],"patch":{"operationId":"updateWorkspaceMemberInvite","summary":"Updates an existing invite","description":"This operation provides a way to update an existing invite. Updates are performed in-place; they do not change the invite link, the expiry time, nor do they re-notify the recipient of the invite.\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"$ref":"#/components/schemas/Role"}},"required":["role"]}}}},"responses":{"200":{"description":"Updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkspaceInvite"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Invites"]},"delete":{"operationId":"cancelWorkspaceMemberInvite","summary":"Deletes an invite","description":"This operation provides a way to cancel invites by deleting them. Already accepted invites cannot be deleted.","responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Invites"]}},"/workspaces/{workspace_id}/invites/{invite_key}/accept":{"summary":"Accept an Invite","description":"This [RPC](https://en.wikipedia.org/wiki/Remote_procedure_call)-style endpoint accepts a given invite to join a workspace.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"},{"$ref":"#/components/parameters/InviteKeyParam"}],"post":{"operationId":"acceptWorkspaceMemberInvite","summary":"Accept the invitation to join a workspace","description":"Accept the invitation to join a workspace. If the operation succeeds the user will be a member of the workspace\n","responses":{"204":{"description":"OK"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Invites"]}},"/workspaces/{workspace_id}/invites/{invite_id}/resend":{"summary":"Resend Invite notification","description":"Resend the notification for a previously generated Invite.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"},{"$ref":"#/components/parameters/InviteIDParam"}],"post":{"operationId":"resendWorkspaceMemberInvite","summary":"Resend Invite notification","description":"This operation provides a way to resend an Invite notification. Invite notifications can only be sent for Invites not yet accepted.","responses":{"204":{"description":"OK"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"403":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"tags":["Invites"]}},"/workspaces/{workspace_id}/dbs":{"summary":"Databases","description":"This path contains operations that can be performed on databases within Xata.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"}],"get":{"operationId":"getDatabaseList","summary":"List databases","description":"List all databases available in your Workspace.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListDatabasesResponse"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]}},"/workspaces/{workspace_id}/dbs/{db_name}":{"summary":"Single Database","description":"Given a parameter `db_name`, this path allows interacting with a specific database on Xata. Below are a number of operations that can be performed on a given database.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"},{"$ref":"#/components/parameters/DBNameParam"}],"put":{"operationId":"createDatabase","summary":"Create Database","description":"Create Database with identifier name","requestBody":{"description":"","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"branchName":{"type":"string","minLength":1},"region":{"type":"string","minLength":1},"ui":{"type":"object","properties":{"color":{"type":"string"}}},"metadata":{"$ref":"#/components/schemas/BranchMetadata"}},"example":{"branchName":"main","region":"us-east-1","metadata":{"repository":"github.com/my/repository","branch":"github repository","stage":"testing","labels":["development"]}},"required":["region"]}}}},"responses":{"201":{"description":"Created","headers":{"Location":{"schema":{"type":"string","format":"uri"}}},"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"databaseName":{"type":"string","minLength":1},"branchName":{"type":"string"},"status":{"$ref":"#/components/schemas/MigrationStatus"}},"example":{"databaseName":"New Database","status":"completed"},"required":["databaseName","status"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"422":{"$ref":"#/components/responses/SimpleError"},"423":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]},"delete":{"operationId":"deleteDatabase","summary":"Delete Database","description":"Delete a database and all of its branches and tables permanently.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/MigrationStatus"}},"required":["status"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]},"get":{"operationId":"getDatabaseMetadata","summary":"Get Database metadata","description":"Retrieve metadata of the given database","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DatabaseMetadata"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]},"patch":{"operationId":"updateDatabaseMetadata","summary":"Update Database metadata","description":"Update the color of the selected database","requestBody":{"description":"","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"ui":{"type":"object","properties":{"color":{"type":"string","minLength":1}}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DatabaseMetadata"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]}},"/workspaces/{workspace_id}/dbs/{db_name}/rename":{"summary":"Rename database","description":"Given a parameter `db_name`, this path allows you to rename your Xata database. When you rename a database all URLs accessing the database have to be updated.","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"},{"$ref":"#/components/parameters/DBNameParam"}],"post":{"operationId":"renameDatabase","summary":"Rename Database","description":"Change the name of an existing database","requestBody":{"description":"","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"newName":{"type":"string","minLength":1}},"required":["newName"]}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DatabaseMetadata"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"422":{"$ref":"#/components/responses/SimpleError"},"423":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]}},"/workspaces/{workspace_id}/regions":{"summary":"Available regions","description":"This path allows to access the list of available database regions","parameters":[{"$ref":"#/components/parameters/WorkspaceIDParam"}],"get":{"operationId":"listRegions","summary":"List available regions","description":"List regions available to create a database on","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListRegionsResponse"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"5XX":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Databases"]}},"/db/{db_branch_name}/pgroll/apply":{"summary":"Apply Migration","description":"Apply a pgroll migration to the specified database","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"applyMigration","summary":"Apply a pgroll migration","description":"Applies a pgroll migration to the specified database.","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","additionalProperties":true}}}}},"responses":{"202":{"description":"Accepted"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/db/{db_branch_name}/pgroll/status":{"summary":"Get pgroll status","description":"Get the pgroll status for the specified database","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"get":{"operationId":"pgRollStatus","summary":"Get pgroll status","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PgRollStatusResponse"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/dbs/{db_name}":{"summary":"Single Database","description":"Given a parameter `db_name`, this path allows interacting with a specific database on Xata. Below are a number of operations that can be performed on a given database.","parameters":[{"$ref":"#/components/parameters/DBNameParam"}],"get":{"operationId":"getBranchList","summary":"List branches","description":"List all available Branches","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListBranchesResponse"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/db/{db_branch_name}":{"summary":"Database Branch by Name","description":"This path allows interacting with a given database branch, referenced by parameter `db_branch_name`, which is expected in the format `database_name:branch_name`.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"get":{"operationId":"getBranchDetails","summary":"Get branch schema and metadata","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DBBranch"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]},"put":{"operationId":"createBranch","summary":"Create Database branch","parameters":[{"name":"from","in":"query","description":"Name of source branch to branch the new schema from","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"from":{"description":"Select the branch to fork from. Defaults to 'main'","type":"string"},"metadata":{"$ref":"#/components/schemas/BranchMetadata"}}}}}},"responses":{"201":{"description":"Created","headers":{"Location":{"schema":{"type":"string","format":"uri"},"description":"URI to newly created resource: /db/{db_branch_name}"}},"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"databaseName":{"type":"string","minLength":1},"branchName":{"type":"string"},"status":{"$ref":"#/components/schemas/MigrationStatus"}},"example":{"databaseName":"mydatabase","branchName":"mybranch","status":"completed"},"required":["databaseName","branchName","status"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"423":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]},"delete":{"operationId":"deleteBranch","summary":"Delete Database branch","description":"Delete the branch in the database and all its resources","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/MigrationStatus"}},"required":["status"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"409":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/db/{db_branch_name}/metadata":{"summary":"Branch Metadata","description":"This path allows interacting with the metadata of a specific database branch.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"put":{"operationId":"updateBranchMetadata","summary":"Update branch metadata","description":"Update the branch metadata","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BranchMetadata"}}}},"responses":{"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]},"get":{"operationId":"getBranchMetadata","summary":"Get Branch Metadata","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BranchMetadata"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/db/{db_branch_name}/stats":{"summary":"Branch Statistics","description":"This endpoint presents a number of statistics on a given database's branch.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"get":{"operationId":"getBranchStats","summary":"Branch stats","description":"Get branch usage metrics.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"timestamp":{"type":"string"},"interval":{"type":"string"},"resolution":{"type":"string"},"numberOfRecords":{"type":"array","items":{"$ref":"#/components/schemas/MetricsDatapoint"}},"writesOverTime":{"type":"array","items":{"$ref":"#/components/schemas/MetricsDatapoint"}},"readsOverTime":{"type":"array","items":{"$ref":"#/components/schemas/MetricsDatapoint"}},"readLatency":{"$ref":"#/components/schemas/MetricsLatency"},"writeLatency":{"$ref":"#/components/schemas/MetricsLatency"},"warning":{"type":"string"}},"required":["timestamp","interval","resolution"]}}}},"400":{"$ref":"#/components/responses/SimpleError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/dbs/{db_name}/gitBranches":{"summary":"Mapping of git to Xata branches","description":"This path allows managing the mapping between git and Xata branches, which is used by the `/dbs/{db_name}/resolveBranch` endpoint to resolve git branches to the associated Xata branches.\n","parameters":[{"$ref":"#/components/parameters/DBNameParam"}],"get":{"operationId":"getGitBranchesMapping","summary":"List git branches mapping","description":"Lists all the git branches in the mapping, and their associated Xata branches.\n\nExample response:\n\n```json\n{\n  \"mappings\": [\n      {\n        \"gitBranch\": \"main\",\n        \"xataBranch\": \"main\"\n      },\n      {\n        \"gitBranch\": \"gitBranch1\",\n        \"xataBranch\": \"xataBranch1\"\n      }\n      {\n        \"gitBranch\": \"xataBranch2\",\n        \"xataBranch\": \"xataBranch2\"\n      }\n  ]\n}\n```\n","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListGitBranchesResponse"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]},"post":{"operationId":"addGitBranchesEntry","summary":"Link a git branch to a Xata branch","description":"Adds an entry to the mapping of git branches to Xata branches. The git branch and the Xata branch must be present in the body of the request. If the Xata branch doesn't exist, a 400 error is returned.\n\nIf the git branch is already present in the mapping, the old entry is overwritten, and a warning message is included in the response. If the git branch is added and didn't exist before, the response code is 204. If the git branch existed and it was overwritten, the response code is 201.\n\nExample request:\n\n```json\n// POST https://tutorial-ng7s8c.xata.sh/dbs/demo/gitBranches\n{\n  \"gitBranch\": \"fix/bug123\",\n  \"xataBranch\": \"fix_bug\"\n}\n```\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"gitBranch":{"description":"The name of the Git branch.","type":"string"},"xataBranch":{"description":"The name of the Xata branch.","$ref":"#/components/schemas/BranchName"}},"required":["gitBranch","xataBranch"]}}}},"responses":{"201":{"description":"Operation was successful with warnings","content":{"application/json":{"schema":{"type":"object","properties":{"warning":{"description":"Warning message","type":"string"}},"example":{"warning":"Git branch [fix/bug123] was already present in the mapping and was overwritten."}}}}},"204":{"description":"Operation was successful without warnings"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]},"delete":{"operationId":"removeGitBranchesEntry","summary":"Unlink a git branch to a Xata branch","description":"Removes an entry from the mapping of git branches to Xata branches. The name of the git branch must be passed as a query parameter. If the git branch is not found, the endpoint returns a 404 status code.\n\nExample request:\n\n```json\n// DELETE https://tutorial-ng7s8c.xata.sh/dbs/demo/gitBranches?gitBranch=fix%2Fbug123\n```\n","parameters":[{"name":"gitBranch","in":"query","description":"The Git Branch to remove from the mapping","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"OK"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"description":"The git branch was not found in the mapping"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/dbs/{db_name}/resolveBranch":{"summary":"Resolve the branch to use","description":"This endpoint is typically used by the Xata SDKs to resolve the correct branch to use in a particular situation. The main input is the git branch.","parameters":[{"$ref":"#/components/parameters/DBNameParam"}],"get":{"operationId":"resolveBranch","summary":"Resolve a Git Branch to a Xata branch","description":"In order to resolve the database branch, the following algorithm is used:\n* if the `gitBranch` was provided and is found in the [git branches mapping](/api-reference/dbs/db_name/gitBranches), the associated Xata branch is returned\n* else, if a Xata branch with the exact same name as `gitBranch` exists, return it\n* else, if `fallbackBranch` is provided and a branch with that name exists, return it\n* else, return the default branch of the DB (`main` or the first branch)\n\nExample call:\n\n```json\n// GET https://tutorial-ng7s8c.xata.sh/dbs/demo/dbs/demo/resolveBranch?gitBranch=test&fallbackBranch=tsg\n```\n\nExample response:\n\n```json\n{\n  \"branch\": \"main\",\n  \"reason\": {\n    \"code\": \"DEFAULT_BRANCH\",\n    \"message\": \"Default branch for this database (main)\"\n  }\n}\n```\n","parameters":[{"name":"gitBranch","in":"query","description":"The Git Branch","schema":{"type":"string"}},{"name":"fallbackBranch","in":"query","description":"Default branch to fallback to","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"branch":{"type":"string"},"reason":{"type":"object","properties":{"code":{"type":"string","enum":["FOUND_IN_MAPPING","BRANCH_EXISTS","FALLBACK_BRANCH","DEFAULT_BRANCH"]},"message":{"type":"string"}},"required":["code","message"]}},"example":{"branch":"main","reason":{"code":"DEFAULT_BRANCH","message":"Default branch for this database (main)"}},"required":["branch","reason"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Branch"]}},"/db/{db_branch_name}/migrations":{"summary":"Branch Migrations [deprecated]","description":"This path allows access to migrations on a given database branch.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"get":{"operationId":"getBranchMigrationHistory","summary":"Get branch migration history [deprecated]","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"limit":{"type":"integer"},"startFrom":{"type":"string"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"startedFrom":{"$ref":"#/components/schemas/StartedFromMetadata"},"migrations":{"type":"array","items":{"$ref":"#/components/schemas/BranchMigration"}}}}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/migrations/plan":{"summary":"Migration Plan [deprecated]","description":"This endpoint enables creating a migration plan for a given database branch.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"getBranchMigrationPlan","summary":"Compute migration plan [deprecated]","description":"Compute a migration plan from a target schema the branch should be migrated too.","requestBody":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Schema"}}}},"responses":{"200":{"$ref":"#/components/responses/BranchMigrationPlan"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"deprecated":true,"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/migrations/execute":{"summary":"Migration Execution [deprecated]","description":"This endpoint is called in the style of an RPC (Remote Procedure Call) when a migration is to be executed against a specific database.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"executeBranchMigrationPlan","summary":"Migrate branch [deprecated]","description":"Apply a migration plan to the branch","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"version":{"type":"integer"},"migration":{"$ref":"#/components/schemas/BranchMigration"}},"required":["version","migration"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"deprecated":true,"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/history":{"summary":"Query schema history.","description":"Query the branch its schema history.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"getBranchSchemaHistory","summary":"Query schema history.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"page":{"type":"object","properties":{"after":{"description":"Query the next page that follow the cursor.","type":"string"},"before":{"description":"Query the previous page before the cursor.","type":"string"},"size":{"description":"Set page size. If the size is missing it is read from the cursor. If no cursor is given xata will choose the default page size.","type":"integer","default":20}}},"since":{"description":"Report only migrations that have been added since the given Migration ID.","type":"string"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"meta":{"type":"object","properties":{"cursor":{"description":"last record id","type":"string"},"more":{"description":"true if more records can be fetch","type":"boolean"}},"required":["cursor","more"]},"logs":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}},"required":["meta","logs"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/compare":{"summary":"Compare branch with custom schema.","description":"Compare the branch schema with a custom provided schema.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"compareBranchWithUserSchema","summary":"Compare branch with user schema.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"schema":{"$ref":"#/components/schemas/Schema"},"schemaOperations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}},"branchOperations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}}},"required":["schema"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaCompareResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/compare/{branch_name}":{"summary":"Compare branch schemas.","description":"Compare the schema of any 2 branches.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/BranchNameParam"}],"post":{"operationId":"compareBranchSchemas","summary":"Compare branch schemas.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"sourceBranchOperations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}},"targetBranchOperations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}}},"required":["schema"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaCompareResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/update":{"summary":"Update Branch schema","description":"Update the branch schema with migration operations","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"updateBranchSchema","summary":"Update Branch schema","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Migration"}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/preview":{"summary":"Preview branch schema edits.","description":"Preview the resulting branch schema when applying the edit script.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"previewBranchSchemaEdit","summary":"Preview branch schema edits.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"edits":{"$ref":"#/components/schemas/SchemaEditScript"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"original":{"$ref":"#/components/schemas/Schema"},"updated":{"$ref":"#/components/schemas/Schema"}},"required":["original","updated"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/apply":{"summary":"Update Branch schema with edit script.","description":"Update the branch from schema edit script.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"applyBranchSchemaEdit","summary":"Apply edit script.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"edits":{"$ref":"#/components/schemas/SchemaEditScript"}},"required":["edits"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/schema/push":{"summary":"Push migrations.","description":"Apply a list of migrations to the current branch.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"pushBranchMigrations","summary":"Push migrations.","description":"The `schema/push` API accepts a list of migrations to be applied to the\ncurrent branch. A list of applicable migrations can be fetched using\nthe `schema/history` API from another branch or database.\n\nThe most recent migration must be part of the list or referenced (via\n`parentID`) by the first migration in the list of migrations to be pushed.\n\nEach migration in the list has an `id`, `parentID`, and `checksum`. The\nchecksum for migrations are generated and verified by xata. The\noperation fails if any migration in the list has an invalid checksum.\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"migrations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationObject"}}},"required":["migrations"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Migrations"]}},"/db/{db_branch_name}/tables/{table_name}":{"summary":"Database Table by Name","description":"This endpoint provides a way to mutate a specific table on a database.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"put":{"operationId":"createTable","summary":"Create table","description":"Creates a new table with the given name. Returns 422 if a table with the same name already exists.","responses":{"201":{"description":"Created","headers":{"Location":{"schema":{"type":"string","format":"uri"},"description":"URI to newly created resource: /db/{db_branch_name}/tables/{table_name}"}},"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"branchName":{"type":"string"},"tableName":{"type":"string","minLength":1},"status":{"$ref":"#/components/schemas/MigrationStatus"}},"example":{"branchName":"mydb_main","tableName":"mytable","status":"completed"},"required":["branchName","tableName","status"]}}}},"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]},"delete":{"operationId":"deleteTable","summary":"Delete table","description":"Deletes the table with the given name.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/MigrationStatus"}},"required":["status"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"description":"Not Found"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]},"patch":{"operationId":"updateTable","summary":"Update table","description":"Update table. Currently there is only one update operation supported: renaming the table by providing a new name.\n\nIn the example below, we rename a table from “users” to “people”:\n\n```json\n// PATCH /db/test:main/tables/users\n\n{\n  \"name\": \"people\"\n}\n```","requestBody":{"description":"","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"name":{"type":"string","minLength":1}},"required":["name"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]}},"/db/{db_branch_name}/tables/{table_name}/schema":{"summary":"Table Schema","description":"This endpoint enables reading or updating the schema of a given table.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"get":{"operationId":"getTableSchema","summary":"Get table schema","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"columns":{"type":"array","items":{"$ref":"#/components/schemas/Column"}}},"required":["columns"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]},"put":{"operationId":"setTableSchema","summary":"Update table schema","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"columns":{"type":"array","items":{"$ref":"#/components/schemas/Column"}}},"required":["columns"]}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"409":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]}},"/db/{db_branch_name}/tables/{table_name}/columns":{"summary":"Table Columns","description":"This endpoint allows working with a table's columns.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"get":{"operationId":"getTableColumns","summary":"List table columns","description":"Retrieves the list of table columns and their definition. This endpoint returns the column list with object columns being reported with their\nfull dot-separated path (flattened).\n","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"columns":{"type":"array","items":{"$ref":"#/components/schemas/Column"}}},"example":{"columns":[{"name":"name","type":"string"},{"name":"email","type":"email"},{"name":"settings.plan","type":"string"},{"name":"settings.dark","type":"bool"}]},"required":["columns"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]},"post":{"operationId":"addTableColumn","summary":"Create new column","description":"Adds a new column to the table. The body of the request should contain the column definition.","requestBody":{"description":"The column definition.","content":{"application/json":{"schema":{"example":{"name":"columnName","type":"string"},"$ref":"#/components/schemas/Column"}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]}},"/db/{db_branch_name}/tables/{table_name}/columns/{column_name}":{"summary":"Single Table Column","description":"This endpoint allows working with a single column from a given table.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/ColumnNameParam"}],"get":{"operationId":"getColumn","summary":"Get column information","description":"Get the definition of a single column.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"example":{"value":{"name":"settings.labels","type":"multiple"}},"$ref":"#/components/schemas/Column"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]},"patch":{"operationId":"updateColumn","summary":"Update column","description":"Update column with partial data. Can be used for renaming the column by providing a new \"name\" field.","requestBody":{"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"name":{"type":"string","minLength":1}},"example":{"name":"newName","description":"Sample new description"},"required":["name"]},"examples":{"Rename column":{"value":{"name":"new_name"}}}}}},"responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]},"delete":{"operationId":"deleteColumn","summary":"Delete column","description":"Deletes the specified column.","responses":{"200":{"$ref":"#/components/responses/SchemaUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Table"]}},"/db/{db_branch_name}/transaction":{"summary":"Execute a transaction on a branch","description":"Executes multiple operations together as one. This allows you to run a number of \noperations that succeed as a single group; or fail with no changes to your database.\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"branchTransaction","summary":"Execute a transaction on a branch","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"operations":{"type":"array","items":{"$ref":"#/components/schemas/TransactionOperation"}}},"required":["operations"]}}}},"responses":{"200":{"description":"Returns the results of a successful transaction.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionSuccess"}}}},"400":{"description":"Returns errors from a failed transaction.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionFailure"}}}},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"429":{"$ref":"#/components/responses/RateLimitError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]}},"/db/{db_branch_name}/tables/{table_name}/data":{"summary":"Table Data","description":"This endpoint enables mutating data into a given database table. To query data, please see the [query endpoint](query).\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/ColumnsProjectionParam"}],"post":{"operationId":"insertRecord","summary":"Insert record","description":"Insert a new Record into the Table","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataInputRecord"}}}},"responses":{"201":{"$ref":"#/components/responses/RecordUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]}},"/db/{db_branch_name}/tables/{table_name}/data/{record_id}/column/{column_name}/file/{file_id}":{"summary":"File array access","description":"File array access endpoint allows upload, download and remove of file items.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/RecordIDParam"},{"$ref":"#/components/parameters/ColumnNameParam"},{"$ref":"#/components/parameters/FileItemIDParam"}],"get":{"operationId":"getFileItem","summary":"Download content from a file item in a file array column","description":"Retrieves file content from an array by file ID","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Files"]},"put":{"operationId":"putFileItem","summary":"Upload or update the content of a file item in a file array column","description":"Uploads the file content to an array given the file ID","requestBody":{"content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"responses":{"200":{"$ref":"#/components/responses/PutFileResponse"},"201":{"$ref":"#/components/responses/PutFileResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Files"]},"delete":{"operationId":"deleteFileItem","summary":"Delete an item from a file array","description":"Deletes an item from an file array column given the file ID","responses":{"200":{"$ref":"#/components/responses/PutFileResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Files"]}},"/db/{db_branch_name}/tables/{table_name}/data/{record_id}/column/{column_name}/file":{"summary":"File column access","description":"File access endpoint allows upload and download of binary file content.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/RecordIDParam"},{"$ref":"#/components/parameters/ColumnNameParam"}],"get":{"operationId":"getFile","summary":"Download content from a file column","description":"Retrieves the file content from a file column","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"204":{"description":"no content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Files"]},"put":{"operationId":"putFile","summary":"Upload content to a file column","description":"Uploads the file content to the given file column","requestBody":{"content":{"*/*":{"schema":{"type":"string","format":"binary"}}}},"responses":{"200":{"$ref":"#/components/responses/PutFileResponse"},"201":{"$ref":"#/components/responses/PutFileResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Files"]},"delete":{"operationId":"deleteFile","summary":"Remove the content from a file column","description":"Deletes a file referred in a file column","responses":{"200":{"$ref":"#/components/responses/PutFileResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Files"]}},"/db/{db_branch_name}/tables/{table_name}/data/{record_id}":{"summary":"Table Record","description":"This endpoint enables mutating a given record in a table, referenced by its ID.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/RecordIDParam"},{"$ref":"#/components/parameters/ColumnsProjectionParam"}],"get":{"operationId":"getRecord","summary":"Get record by ID","description":"Retrieve record by ID","responses":{"200":{"$ref":"#/components/responses/RecordResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]},"put":{"operationId":"insertRecordWithID","summary":"Insert record with ID","description":"By default, IDs are auto-generated when data is insterted into Xata. Sending a request to this endpoint allows us to insert a record with a pre-existing ID, bypassing the default automatic ID generation.","parameters":[{"name":"createOnly","in":"query","schema":{"type":"boolean"}},{"name":"ifVersion","in":"query","schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataInputRecord"}}}},"responses":{"200":{"$ref":"#/components/responses/RecordUpdateResponse"},"201":{"$ref":"#/components/responses/RecordUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]},"patch":{"operationId":"updateRecordWithID","summary":"Update record with ID","parameters":[{"name":"ifVersion","in":"query","schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataInputRecord"}}}},"responses":{"200":{"$ref":"#/components/responses/RecordUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]},"post":{"operationId":"upsertRecordWithID","summary":"Upsert record with ID","parameters":[{"name":"ifVersion","in":"query","schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataInputRecord"}}}},"responses":{"200":{"$ref":"#/components/responses/RecordUpdateResponse"},"201":{"$ref":"#/components/responses/RecordUpdateResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]},"delete":{"operationId":"deleteRecord","summary":"Delete record from table","responses":{"200":{"$ref":"#/components/responses/RecordResponse"},"204":{"description":"No Content"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"]}},"/db/{db_branch_name}/tables/{table_name}/bulk":{"summary":"Bulk Table Operations","description":"This endpoint enables bulk operations on a given table. For now, we only allow bulk inserting.\n\nAn example bulk request looks like this:\n\n```json\n// POST https://tutorial-ng7s8c.xata.sh/db/tutorial:main/tables/users/bulk\n\n{\n  \"records\": [\n    {\n      \"email\": \"laurence@example.com\",\n      \"full_name\": \"Laurence Fishburne\",\n      \"team\": \"rec_c8hng2h26un90p8sr7k0\"\n    },\n    {\n      \"email\": \"hugo@example.com\",\n      \"full_name\": \"Hugo Weaving\",\n      \"team\": \"rec_c8hng2h26un90p8sr7k0\"\n    },\n    {\n      \"email\": \"joe@example.com\",\n      \"full_name\": \"Joe Pantoliano\",\n      \"team\": \"rec_c8hng2h26un90p8sr7k0\"\n    }\n  ]\n}\n```\nFor more details, see the [this section](/web-api/records/insert#inserting-records-in-bulk) from the tutorial.\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/ColumnsProjectionParam"}],"post":{"operationId":"bulkInsertTableRecords","summary":"Bulk insert records","description":"Bulk insert records","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/components/schemas/DataInputRecord"}}},"required":["records"]}}}},"responses":{"200":{"$ref":"#/components/responses/BulkInsertResponse"},"400":{"$ref":"#/components/responses/BulkError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"422":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Records"],"x-experimental":true}},"/db/{db_branch_name}/tables/{table_name}/query":{"summary":"Query Table Data","description":"This endpoint serves data from a given table, inside a specific database's branch.\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"post":{"operationId":"queryTable","summary":"Query table","description":"The Query Table API can be used to retrieve all records in a table.\nThe API support filtering, sorting, selecting a subset of columns, and pagination.\n\nThe overall structure of the request looks like this:\n\n```json\n// POST /db/<dbname>:<branch>/tables/<table>/query\n{\n  \"columns\": [...],\n  \"filter\": {\n    \"$all\": [...],\n    \"$any\": [...]\n    ...\n  },\n  \"sort\": {\n    \"multiple\": [...]\n    ...\n  },\n  \"page\": {\n    ...\n  }\n}\n```\n\nFor usage, see also the [API Guide](https://xata.io/docs/api-guide/get).\n\n### Column selection\n\nIf the `columns` array is not specified, all columns are included. For link\nfields, only the ID column of the linked records is included in the response.\n\nIf the `columns` array is specified, only the selected and internal\ncolumns `id` and `xata` are included. The `*` wildcard can be used to\nselect all columns.\n\nFor objects and link fields, if the column name of the object is specified, we\ninclude all of its sub-keys. If only some sub-keys are specified (via dotted\nnotation, e.g. `\"settings.plan\"` ), then only those sub-keys from the object\nare included.\n\nBy the way of example, assuming two tables like this:\n\n```json {\"truncate\": true}\n{\n  \"tables\": [\n    {\n      \"name\": \"teams\",\n      \"columns\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"link\",\n          \"link\": {\n            \"table\": \"users\"\n          }\n        },\n        {\n          \"name\": \"foundedDate\",\n          \"type\": \"datetime\"\n        },\n      ]\n    },\n    {\n      \"name\": \"users\",\n      \"columns\": [\n        {\n          \"name\": \"email\",\n          \"type\": \"email\"\n        },\n        {\n          \"name\": \"full_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"address\",\n          \"type\": \"object\",\n          \"columns\": [\n            {\n              \"name\": \"street\",\n              \"type\": \"string\"\n            },\n            {\n              \"name\": \"number\",\n              \"type\": \"int\"\n            },\n            {\n              \"name\": \"zipcode\",\n              \"type\": \"int\"\n            }\n          ]\n        },\n        {\n          \"name\": \"team\",\n          \"type\": \"link\",\n          \"link\": {\n            \"table\": \"teams\"\n          }\n        }\n      ]\n    }\n  ]\n}\n```\n\nA query like this:\n\n```json\nPOST /db/<dbname>:<branch>/tables/<table>/query\n{\n  \"columns\": [\n    \"name\",\n    \"address.*\"\n  ]\n}\n```\n\nreturns objects like:\n\n```json\n{\n  \"name\": \"Kilian\",\n  \"address\": {\n    \"street\": \"New street\",\n    \"number\": 41,\n    \"zipcode\": 10407\n  }\n}\n```\n\nwhile a query like this:\n\n```json\nPOST /db/<dbname>:<branch>/tables/<table>/query\n{\n  \"columns\": [\n    \"name\",\n    \"address.street\"\n  ]\n}\n```\n\nreturns objects like:\n\n```json\n{\n  \"id\": \"id1\"\n  \"xata\": {\n    \"version\": 0\n  }\n  \"name\": \"Kilian\",\n  \"address\": {\n    \"street\": \"New street\"\n  }\n}\n```\n\nIf you want to return all columns from the main table and selected columns from the linked table, you can do it like this:\n\n```json\n{\n  \"columns\": [\"*\", \"team.name\"]\n}\n```\n\nThe `\"*\"` in the above means all columns, including columns of objects. This returns data like:\n\n```json\n{\n  \"id\": \"id1\"\n  \"xata\": {\n    \"version\": 0\n  }\n  \"name\": \"Kilian\",\n  \"email\": \"kilian@gmail.com\",\n  \"address\": {\n    \"street\": \"New street\",\n    \"number\": 41,\n    \"zipcode\": 10407\n  },\n  \"team\": {\n    \"id\": \"XX\",\n    \"xata\": {\n      \"version\": 0\n    },\n    \"name\": \"first team\"\n  }\n}\n```\n\nIf you want all columns of the linked table, you can do:\n\n```json\n{\n  \"columns\": [\"*\", \"team.*\"]\n}\n```\n\nThis returns, for example:\n\n```json\n{\n  \"id\": \"id1\"\n  \"xata\": {\n    \"version\": 0\n  }\n  \"name\": \"Kilian\",\n  \"email\": \"kilian@gmail.com\",\n  \"address\": {\n    \"street\": \"New street\",\n    \"number\": 41,\n    \"zipcode\": 10407\n  },\n  \"team\": {\n    \"id\": \"XX\",\n    \"xata\": {\n      \"version\": 0\n    },\n    \"name\": \"first team\",\n    \"code\": \"A1\",\n    \"foundedDate\": \"2020-03-04T10:43:54.32Z\"\n  }\n}\n```\n\n### Filtering\n\nThere are two types of operators:\n\n- Operators that work on a single column: `$is`, `$contains`, `$pattern`,\n  `$includes`, `$gt`, etc.\n- Control operators that combine multiple conditions: `$any`, `$all`, `$not` ,\n  `$none`, etc.\n\nAll operators start with an `$` to differentiate them from column names\n(which are not allowed to start with a dollar sign).\n\n#### Exact matching and control operators\n\nFilter by one column:\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": \"value\"\n  }\n}\n```\n\nThis is equivalent to using the `$is` operator:\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$is\": \"value\"\n    }\n  }\n}\n```\n\nFor example:\n\n```json\n{\n  \"filter\": {\n    \"name\": \"r2\"\n  }\n}\n```\n\nOr:\n\n```json\n{\n  \"filter\": {\n    \"name\": {\n      \"$is\": \"r2\"\n    }\n  }\n}\n```\n\nFor objects, both dots and nested versions work:\n\n```json\n{\n  \"filter\": {\n    \"settings.plan\": \"free\"\n  }\n}\n```\n\n```json\n{\n  \"filter\": {\n    \"settings\": {\n      \"plan\": \"free\"\n    }\n  }\n}\n```\n\nIf you want to OR together multiple values, you can use the `$any` operator with an array of values:\n\n```json\n{\n  \"filter\": {\n    \"settings.plan\": { \"$any\": [\"free\", \"paid\"] }\n  }\n}\n```\n\nIf you specify multiple columns in the same filter, they are logically AND'ed together:\n\n```json\n{\n  \"filter\": {\n    \"settings.dark\": true,\n    \"settings.plan\": \"free\"\n  }\n}\n```\n\nThe above matches if both conditions are met.\n\nTo be more explicit about it, you can use `$all` or `$any`:\n\n```json\n{\n  \"filter\": {\n    \"$any\": {\n      \"settings.dark\": true,\n      \"settings.plan\": \"free\"\n    }\n  }\n}\n```\n\nThe `$all` and `$any` operators can also receive an array of objects, which allows for repeating column names:\n\n```json\n{\n  \"filter\": {\n    \"$any\": [\n      {\n        \"name\": \"r1\"\n      },\n      {\n        \"name\": \"r2\"\n      }\n    ]\n  }\n}\n```\n\nYou can check for a value being not-null with `$exists`:\n\n```json\n{\n  \"filter\": {\n    \"$exists\": \"settings\"\n  }\n}\n```\n\nThis can be combined with `$all` or `$any` :\n\n```json\n{\n  \"filter\": {\n    \"$all\": [\n      {\n        \"$exists\": \"settings\"\n      },\n      {\n        \"$exists\": \"name\"\n      }\n    ]\n  }\n}\n```\n\nOr you can use the inverse operator `$notExists`:\n\n```json\n{\n  \"filter\": {\n    \"$notExists\": \"settings\"\n  }\n}\n```\n\n#### Partial match\n\n`$contains` is the simplest operator for partial matching. Note that `$contains` operator can\ncause performance issues at scale, because indices cannot be used.\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$contains\": \"value\"\n    }\n  }\n}\n```\n\nWildcards are supported via the `$pattern` operator:\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$pattern\": \"v*alu?\"\n    }\n  }\n}\n```\n\nThe `$pattern` operator accepts two wildcard characters:\n* `*` matches zero or more characters\n* `?` matches exactly one character\n\nIf you want to match a string that contains a wildcard character, you can escape them using a backslash (`\\`). You can escape a backslash by usign another backslash.\n\nYou can also use the `$endsWith` and `$startsWith` operators:\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$endsWith\": \".gz\"\n    },\n    \"<column_name>\": {\n      \"$startsWith\": \"tmp-\"\n    }\n  }\n}\n```\n\n#### Numeric or datetime ranges\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$ge\": 0,\n      \"$lt\": 100\n    }\n  }\n}\n```\nDate ranges support the same operators, with the date using the format defined in\n[RFC 3339](https://www.rfc-editor.org/rfc/rfc3339):\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$gt\": \"2019-10-12T07:20:50.52Z\",\n      \"$lt\": \"2021-10-12T07:20:50.52Z\"\n    }\n  }\n}\n```\nThe supported operators are `$gt`, `$lt`, `$ge`, `$le`.\n\n#### Negations\n\nA general `$not` operator can inverse any operation.\n\n```json\n{\n  \"filter\": {\n    \"$not\": {\n      \"<column_name1>\": \"value1\",\n      \"<column_name2>\": \"value1\"\n    }\n  }\n}\n```\n\nNote: in the above the two condition are AND together, so this does (NOT ( ...\nAND ...))\n\nOr more complex:\n\n```json\n{\n  \"filter\": {\n    \"$not\": {\n      \"$any\": [\n        {\n          \"<column_name1>\": \"value1\"\n        },\n        {\n          \"$all\": [\n            {\n              \"<column_name2>\": \"value2\"\n            },\n            {\n              \"<column_name3>\": \"value3\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\nThe `$not: { $any: {}}` can be shorted using the `$none` operator:\n\n```json\n{\n  \"filter\": {\n    \"$none\": {\n      \"<column_name1>\": \"value1\",\n      \"<column_name2>\": \"value1\"\n    }\n  }\n}\n```\n\nIn addition, you can use operators like `$isNot` or `$notExists` to simplify expressions:\n\n```json\n{\n  \"filter\": {\n    \"<column_name>\": {\n      \"$isNot\": \"2019-10-12T07:20:50.52Z\"\n    }\n  }\n}\n```\n\n#### Working with arrays\n\nTo test that an array contains a value, use `$includesAny`.\n\n```json\n{\n  \"filter\": {\n    \"<array_name>\": {\n      \"$includesAny\": \"value\"\n    }\n  }\n}\n```\n\n##### `includesAny`\n\nThe `$includesAny` operator accepts a custom predicate that will check if\nany value in the array column matches the predicate. The `$includes` operator is a\nsynonym for the `$includesAny` operator.\n\nFor example a complex predicate can include\nthe `$all` , `$contains` and `$endsWith` operators:\n\n```json\n{\n  \"filter\": {\n    \"<array name>\": {\n      \"$includes\": {\n        \"$all\": [\n          { \"$contains\": \"label\" },\n          { \"$not\": { \"$endsWith\": \"-debug\" } }\n        ]\n      }\n    }\n  }\n}\n```\n\n##### `includesNone`\n\nThe `$includesNone` operator succeeds if no array item matches the\npredicate.\n\n```json\n{\n  \"filter\": {\n    \"settings.labels\": {\n      \"$includesNone\": [{ \"$contains\": \"label\" }]\n    }\n  }\n}\n```\nThe above matches if none of the array values contain the string \"label\".\n\n##### `includesAll`\n\nThe `$includesAll` operator succeeds if all array items match the\npredicate.\n\nHere is an example of using the `$includesAll` operator:\n\n```json\n{\n  \"filter\": {\n    \"settings.labels\": {\n      \"$includesAll\": [{ \"$contains\": \"label\" }]\n    }\n  }\n}\n```\n\nThe above matches if all array values contain the string \"label\".\n\n### Sorting\n\nSorting by one element:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"sort\": {\n    \"index\": \"asc\"\n  }\n}\n```\n\nor descendently:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"sort\": {\n    \"index\": \"desc\"\n  }\n}\n```\n\nSorting by multiple fields:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"sort\": [\n    {\n      \"index\": \"desc\"\n    },\n    {\n      \"createdAt\": \"desc\"\n    }\n  ]\n}\n```\n\nIt is also possible to sort results randomly:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"sort\": {\n    \"*\": \"random\"\n  }\n}\n```\n\nNote that a random sort does not apply to a specific column, hence the special column name `\"*\"`.\n\nA random sort can be combined with an ascending or descending sort on a specific column:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"sort\": [\n    {\n      \"name\": \"desc\"\n    },\n    {\n      \"*\": \"random\"\n    }\n  ]\n}\n```\n\nThis will sort on the `name` column, breaking ties randomly.\n\n### Pagination\n\nWe offer cursor pagination and offset pagination. The cursor pagination method can be used for sequential scrolling with unrestricted depth. The offset pagination can be used to skip pages and is limited to 1000 records.\n\nExample of cursor pagination:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"page\": {\n    \"after\":\"fMoxCsIwFIDh3WP8c4amDai5hO5SJCRNfaVSeC9b6d1FD\"\n  }\n}\n```\n\nIn the above example, the value of the `page.after` parameter is the cursor returned by the previous query. A sample response is shown below:\n\n```json\n{\n  \"meta\": {\n    \"page\": {\n      \"cursor\": \"fMoxCsIwFIDh3WP8c4amDai5hO5SJCRNfaVSeC9b6d1FD\",\n      \"more\": true\n    }\n  },\n  \"records\": [...]\n}\n```\n\nThe `page` object might contain the follow keys, in addition to `size` and `offset` that were introduced before:\n\n- `after`: Return the next page 'after' the current cursor\n- `before`: Return the previous page 'before' the current cursor.\n- `start`: Resets the given cursor position to the beginning of the query result set. \nWill return the first N records from the query result, where N is the `page.size` parameter. \n- `end`: Resets the give cursor position to the end for the query result set. \nReturns the last N records from the query result, where N is the `page.size` parameter.\n\nThe request will fail if an invalid cursor value is given to `page.before`,\n`page.after`, `page.start` , or `page.end`. No other cursor setting can be\nused if `page.start` or `page.end` is set in a query.\n\nIf both `page.before` and `page.after` parameters are present we treat the\nrequest as a range query. The range query will return all entries after\n`page.after`, but before `page.before`, up to `page.size` or the maximum\npage size. This query requires both cursors to use the same filters and sort\nsettings, plus we require `page.after < page.before`. The range query returns\na new cursor. If the range encompass multiple pages the next page in the range\ncan be queried by update `page.after` to the returned cursor while keeping the\n`page.before` cursor from the first range query.\n\nThe `filter` , `columns`, `sort` , and `page.size` configuration will be\nencoded with the cursor. The pagination request will be invalid if\n`filter` or `sort` is set. The columns returned and page size can be changed\nanytime by passing the `columns` or `page.size` settings to the next query.\n\nIn the following example of size + offset pagination we retrieve the third page of up to 100 results:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"page\": {\n    \"size\": 100,\n    \"offset\": 200\n  }\n}\n```\n\nThe `page.size` parameter represents the maximum number of records returned by this query. It has a default value of 20 and a maximum value of 200.\nThe `page.offset` parameter represents the number of matching records to skip. It has a default value of 0 and a maximum value of 800.\n\nCursor pagination also works in combination with offset pagination. For example, starting from a specific cursor position, using a page size of 200 and an offset of 800, you can skip up to 5 pages of 200 records forwards or backwards from the cursor's position:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"page\": {\n    \"size\": 200,\n    \"offset\": 800,\n    \"after\": \"fMoxCsIwFIDh3WP8c4amDai5hO5SJCRNfaVSeC9b6d1FD\"\n  }\n}\n```\n\n**Special cursors:**\n\n- `page.after=end`: Result points past the last entry. The list of records\n  returned is empty, but `page.meta.cursor` will include a cursor that can be\n  used to \"tail\" the table from the end waiting for new data to be inserted.\n- `page.before=end`: This cursor returns the last page.\n- `page.start=$cursor`: Start at the beginning of the result set of the $cursor query. This is equivalent to querying the\n  first page without a cursor but applying `filter` and `sort` . Yet the `page.start`\n  cursor can be convenient at times as user code does not need to remember the\n  filter, sort, columns or page size configuration. All these information are\n  read from the cursor.\n- `page.end=$cursor`: Move to the end of the result set of the $cursor query. This is equivalent to querying the\n  last page with `page.before=end`, `filter`, and `sort` . Yet the\n  `page.end` cursor can be more convenient at times as user code does not\n  need to remember the filter, sort, columns or page size configuration. All\n  these information are read from the cursor.\n\nWhen using special cursors like `page.after=\"end\"` or `page.before=\"end\"`, we\nstill allow `filter` and `sort` to be set.\n\nExample of getting the last page:\n\n```json\nPOST /db/demo:main/tables/table/query\n{\n  \"page\": {\n    \"size\": 10,\n    \"before\": \"end\"\n  }\n}\n```\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/FilterExpression"},"sort":{"$ref":"#/components/schemas/SortExpression"},"page":{"$ref":"#/components/schemas/PageConfig"},"columns":{"$ref":"#/components/schemas/QueryColumnsProjection"},"consistency":{"description":"The consistency level for this request.","type":"string","default":"strong","enum":["strong","eventual"]}}}}}},"responses":{"200":{"$ref":"#/components/responses/QueryResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/search":{"summary":"Search Database","description":"This endpoint performs full text search across an entire database branch. You can filter down to  particular\ntable by using the `tables` parameter. The `tables` parameter accepts a mixed array of strings and objects. Using a string (the table name) selects the full table. Using an object allows one to specify a filter as well. The supported filters are the same as documented for the [query endpoint](/api-reference/db/db_branch_name/tables/table_name/) with the following exceptions:\n* filters `$contains`, `$startsWith`, `$endsWith` don't work on columns of type `text`\n* filtering on columns of type `multiple` is currently unsupported\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"searchBranch","summary":"Free text search","description":"Run a free text search operation across the database branch.","requestBody":{"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"tables":{"description":"An array with the tables in which to search. By default, all tables are included. Optionally, filters can be included that apply to each table.","type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"table":{"description":"The name of the table.","type":"string"},"filter":{"$ref":"#/components/schemas/FilterExpression"},"target":{"$ref":"#/components/schemas/TargetExpression"},"boosters":{"type":"array","items":{"$ref":"#/components/schemas/BoosterExpression"}}},"additionalProperties":false,"required":["table"]}]}},"query":{"description":"The query string.","type":"string","minLength":1},"fuzziness":{"$ref":"#/components/schemas/FuzzinessExpression"},"prefix":{"$ref":"#/components/schemas/PrefixExpression"},"highlight":{"$ref":"#/components/schemas/HighlightExpression"},"page":{"$ref":"#/components/schemas/SearchPageConfig"}},"example":{"tables":["users",{"table":"articles","filter":{"author":"Abigail"}}],"query":"after a long day"},"required":["query"]}}}},"responses":{"200":{"$ref":"#/components/responses/SearchResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/tables/{table_name}/search":{"summary":"Search Table","description":"This endpoint performs full text search in a particular table.\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"post":{"operationId":"searchTable","summary":"Free text search in a table","description":"Run a free text search operation in a particular table.\n\nThe endpoint accepts a `query` parameter that is used for the free text search and a set of structured filters (via the `filter` parameter) that are applied before the search. The `filter` parameter uses the same syntax as the [query endpoint](/api-reference/db/db_branch_name/tables/table_name/) with the following exceptions:\n* filters `$contains`, `$startsWith`, `$endsWith` don't work on columns of type `text`\n* filtering on columns of type `multiple` is currently unsupported\n","requestBody":{"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"query":{"description":"The query string.","type":"string","minLength":1},"fuzziness":{"$ref":"#/components/schemas/FuzzinessExpression"},"target":{"$ref":"#/components/schemas/TargetExpression"},"prefix":{"$ref":"#/components/schemas/PrefixExpression"},"filter":{"$ref":"#/components/schemas/FilterExpression"},"highlight":{"$ref":"#/components/schemas/HighlightExpression"},"boosters":{"type":"array","items":{"$ref":"#/components/schemas/BoosterExpression"}},"page":{"$ref":"#/components/schemas/SearchPageConfig"}},"example":{"query":"after a long day","filter":{"firstName":"Abigail"}},"required":["query"]}}}},"responses":{"200":{"$ref":"#/components/responses/SearchResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/tables/{table_name}/vectorSearch":{"summary":"Vector similarity search","description":"This endpoint can be used to perform vector-based similarity searches.\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"post":{"operationId":"vectorSearchTable","summary":"Vector similarity search in a table","description":"This endpoint can be used to perform vector-based similarity searches in a table. \nIt can be used for implementing semantic search and product recommendation. To use this\nendpoint, you need a column of type vector. The input vector must have the same\ndimension as the vector column.\n","requestBody":{"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"queryVector":{"description":"The vector to search for similarities. Must have the same dimension as\nthe vector column used.\n","type":"array","items":{"type":"number"}},"column":{"description":"The vector column in which to search. It must be of type `vector`.","type":"string"},"similarityFunction":{"description":"The function used to measure the distance between two points. Can be one of:\n`cosineSimilarity`, `l1`, `l2`. The default is `cosineSimilarity`.\n","type":"string","default":"cosineSimilarity"},"size":{"description":"Number of results to return.","type":"integer","default":10,"maximum":100,"minimum":1},"filter":{"$ref":"#/components/schemas/FilterExpression"}},"additionalProperties":false,"required":["queryVector","column"]}}}},"responses":{"200":{"$ref":"#/components/responses/SearchResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/tables/{table_name}/ask":{"summary":"Ask data in your table a question","description":"Ask your table a question and have Xata answer.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"post":{"operationId":"askTable","summary":"Ask your table a question","description":"Ask your table a question. If the `Accept` header is set to `text/event-stream`, Xata will stream the results back as SSE's.","requestBody":{"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"question":{"description":"The question you'd like to ask.","type":"string","minLength":3},"searchType":{"description":"The type of search to use. If set to `keyword` (the default), the search can be configured by passing\na `search` object with the following fields. For more details about each, see the Search endpoint documentation.\nAll fields are optional.\n  * fuzziness  - typo tolerance\n  * target - columns to search into, and weights.\n  * prefix - prefix search type.\n  * filter - pre-filter before searching.\n  * boosters - control relevancy.\nIf set to `vector`, a `vectorSearch` object must be passed, with the following parameters. For more details, see the Vector\nSearch endpoint documentation. The `column` and `contentColumn` parameters are required.\n  * column - the vector column containing the embeddings.\n  * contentColumn - the column that contains the text from which the embeddings where computed.\n  * filter - pre-filter before searching.\n","type":"string","default":"keyword","enum":["keyword","vector"]},"search":{"type":"object","additionalProperties":false,"properties":{"fuzziness":{"$ref":"#/components/schemas/FuzzinessExpression"},"target":{"$ref":"#/components/schemas/TargetExpression"},"prefix":{"$ref":"#/components/schemas/PrefixExpression"},"filter":{"$ref":"#/components/schemas/FilterExpression"},"boosters":{"type":"array","items":{"$ref":"#/components/schemas/BoosterExpression"}}}},"vectorSearch":{"type":"object","additionalProperties":false,"properties":{"column":{"description":"The column to use for vector search. It must be of type `vector`.","type":"string"},"contentColumn":{"description":"The column containing the text for vector search. Must be of type `text`.","type":"string"},"filter":{"$ref":"#/components/schemas/FilterExpression"}},"required":["column","contentColumn"]},"rules":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["question"]}}}},"responses":{"200":{"description":"Response to the question","content":{"application/json":{"schema":{"type":"object","properties":{"answer":{"description":"The answer to the input question","type":"string"},"sessionId":{"description":"The session ID for the chat session.","type":"string"}},"required":["answer","sessionId"]}},"text/event-stream":{"schema":{"type":"object","properties":{"answer":{"description":"The answer to the input question","type":"string"},"records":{"description":"The IDs of the records that were used as context.","type":"array","items":{"type":"string"}},"sessionId":{"description":"The session ID for the chat session.","type":"string"}},"required":["answer","records","sessionId"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"429":{"$ref":"#/components/responses/RateLimitError"},"503":{"description":"Unexpected Error"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/tables/{table_name}/ask/{session_id}":{"summary":"Ask follow-up questions of your data","description":"Continue a conversation with your data. This endpoint lets you continue a question started via the /ask endpoint in order to dive deeper into your context or ask clarifying questions.","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"},{"$ref":"#/components/parameters/ChatSessionIDParam"}],"post":{"operationId":"askTableSession","summary":"Continue a conversation with your data","description":"Ask a follow-up question. If the `Accept` header is set to `text/event-stream`, Xata will stream the results back as SSE's.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"message":{"description":"The question you'd like to ask.","type":"string","minLength":3}},"additionalProperties":false}}}},"responses":{"200":{"description":"Response to the question","content":{"application/json":{"schema":{"type":"object","properties":{"answer":{"description":"The answer to the input question","type":"string"}},"required":["answer"]}},"text/event-stream":{"schema":{"type":"object","properties":{"answer":{"description":"The answer to the input question","type":"string"}},"required":["answer"]}}}},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"429":{"$ref":"#/components/responses/RateLimitError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/tables/{table_name}/summarize":{"summary":"Summarize Table Data","description":"This endpoint summarizes from your database. It comes with a range\nof functions to help perform calculations on the data you have stored\nin your tables\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"post":{"operationId":"summarizeTable","summary":"Summarize table","description":"This endpoint allows you to (optionally) define groups, and then to run\ncalculations on the values in each group. This is most helpful when \nyou'd like to understand the data you have in your database.\n\nA group is a combination of unique values. If you create a group for \n`sold_by`, `product_name`, we will return one row for every combination \nof `sold_by` and `product_name` you have in your database. When you \nwant to calculate statistics, you define these groups and ask Xata to \ncalculate data on each group.\n\n**Some questions you can ask of your data:**\n\nHow many records do I have in this table?\n- Set `columns: []` as we we want data from the entire table, so we ask\nfor no groups.\n- Set `summaries: {\"total\": {\"count\": \"*\"}}` in order to see the count \nof all records. We use `count: *` here we'd like to know the total \namount of rows; ignoring whether they are `null` or not.\n\nWhat are the top total sales for each product in July 2022 and sold \nmore than 10 units?\n- Set `filter: {soldAt: {\n  \"$ge\": \"2022-07-01T00:00:00.000Z\", \n  \"$lt\": \"2022-08-01T00:00:00.000Z\"}\n}` \nin order to limit the result set to sales recorded in July 2022.\n- Set `columns: [product_name]` as we'd like to run calculations on \neach unique product name in our table. Setting `columns` like this will \nproduce one row per unique product name.\n- Set `summaries: {\"total_sales\": {\"count\": \"product_name\"}}` as we'd \nlike to create a field called \"total_sales\" for each group. This field \nwill count all rows in each group with non-null product names.\n- Set `sort: [{\"total_sales\": \"desc\"}]` in order to bring the rows with \nthe highest total_sales field to the top.\n- Set `summariesFilter: {\"total_sales\": {\"$ge\": 10}}` to only send back data \nwith greater than or equal to 10 units.\n\n`columns`: tells Xata how to create each group. If you add `product_id` \nwe will create a new group for every unique `product_id`.\n\n`summaries`: tells Xata which calculations to run on each group. Xata\ncurrently supports count, min, max, sum, average.\n\n`sort`: tells Xata in which order you'd like to see results. You may \nsort by fields specified in `columns` as well as the summary names \ndefined in `summaries`.\n\nnote: Sorting on summarized values can be slower on very large tables; \nthis will impact your rate limit significantly more than other queries. \nTry use `filter` to reduce the amount of data being processed in order \nto reduce impact on your limits.\n\n`summariesFilter`: tells Xata how to filter the results of a summary. \nIt has the same syntax as `filter`, however, by using `summariesFilter`\nyou may also filter on the results of a query.\n\nnote: This is a much slower to use than `filter`. We recommend using \n`filter` wherever possible and `summariesFilter` when it's not \npossible to use `filter`.\n\n`page.size`: tells Xata how many records to return. If unspecified, Xata\nwill return the default size.\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/FilterExpression"},"columns":{"$ref":"#/components/schemas/ColumnsProjection"},"summaries":{"$ref":"#/components/schemas/SummaryExpressionList"},"sort":{"$ref":"#/components/schemas/SortExpression"},"summariesFilter":{"$ref":"#/components/schemas/FilterExpression"},"consistency":{"description":"The consistency level for this request.","type":"string","default":"strong","enum":["strong","eventual"]},"page":{"type":"object","properties":{"size":{"description":"The number of records returned by summarize. If the amount of data you have exceeds this, or you have\nmore complex reporting requirements, we recommend that you use the aggregate endpoint instead.\n","type":"integer","default":20,"maximum":1000,"minimum":1}}}}}}}},"responses":{"200":{"$ref":"#/components/responses/SummarizeResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/tables/{table_name}/aggregate":{"summary":"Aggregate Table","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"},{"$ref":"#/components/parameters/TableNameParam"}],"post":{"operationId":"aggregateTable","summary":"Run aggregations over a table","description":"This endpoint allows you to run aggregations (analytics) on the data from one table.\nWhile the summary endpoint is served from a transactional store and the results are strongly \nconsistent, the aggregate endpoint is served from our columnar store and the results are \nonly eventually consistent. On the other hand, the aggregate endpoint uses a \nstore that is more appropiate for analytics, makes use of approximative algorithms \n(e.g for cardinality), and is generally faster and can do more complex aggregations.\n\nFor usage, see the [API Guide](https://xata.io/docs/api-guide/aggregate).\n","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/FilterExpression"},"aggs":{"$ref":"#/components/schemas/AggExpressionMap"}}}}}},"responses":{"200":{"$ref":"#/components/responses/AggResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"security":[{"bearerAuth":[]}],"tags":["Search and Filter"]}},"/db/{db_branch_name}/sql":{"summary":"Query database using SQL","description":"This endpoint performs the SQL query across the entire database branch. Set your SQL query in the parameter `query`.\n","parameters":[{"$ref":"#/components/parameters/DBBranchNameParam"}],"post":{"operationId":"sqlQuery","summary":"SQL query","description":"Run an SQL query across the database branch.","requestBody":{"content":{"application/json":{"schema":{"description":"","type":"object","properties":{"statement":{"description":"The SQL statement.","type":"string","minLength":1},"params":{"description":"The query parameter list.","type":"array","nullable":true},"consistency":{"description":"The consistency level for this request.","type":"string","default":"strong","enum":["strong","eventual"]}},"example":{"statement":"select * from users;"},"required":["statement"]}}}},"responses":{"200":{"$ref":"#/components/responses/SQLResponse"},"201":{"$ref":"#/components/responses/SQLResponse"},"400":{"$ref":"#/components/responses/BadRequestError"},"401":{"$ref":"#/components/responses/AuthError"},"404":{"$ref":"#/components/responses/SimpleError"},"503":{"$ref":"#/components/responses/ServiceUnavailableError"},"5XX":{"description":"Unexpected Error"},"default":{"description":"Unexpected Error"}},"tags":["SQL"]}}},"components":{"parameters":{"APIKeyNameParam":{"name":"key_name","in":"path","required":true,"schema":{"$ref":"#/components/schemas/APIKeyName"},"description":"API Key name"},"BranchNameParam":{"name":"branch_name","in":"path","required":true,"schema":{"$ref":"#/components/schemas/BranchName"},"description":"The Database Name"},"ChatSessionIDParam":{"name":"session_id","in":"path","required":true,"schema":{"type":"string","maxLength":36,"minLength":36,"title":"SessionID"}},"ColumnNameParam":{"name":"column_name","in":"path","required":true,"schema":{"$ref":"#/components/schemas/ColumnName"},"description":"The Column name"},"ColumnsProjectionParam":{"name":"columns","in":"query","required":false,"explode":false,"schema":{"$ref":"#/components/schemas/ColumnsProjection"},"description":"Column filters"},"DBBranchNameParam":{"name":"db_branch_name","in":"path","required":true,"schema":{"$ref":"#/components/schemas/DBBranchName"},"description":"The DBBranchName matches the pattern `{db_name}:{branch_name}`.\n"},"DBNameParam":{"name":"db_name","in":"path","required":true,"schema":{"$ref":"#/components/schemas/DBName"},"description":"The Database Name"},"FileAccessIDParam":{"name":"file_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/FileAccessID"},"description":"The File Access Identifier"},"FileItemIDParam":{"name":"file_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/FileItemID"},"description":"The File Identifier"},"FileSignatureParam":{"name":"verify","in":"query","required":false,"explode":false,"schema":{"$ref":"#/components/schemas/FileSignature"},"description":"File access signature"},"InviteIDParam":{"name":"invite_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/InviteID"},"description":"Invite identifier"},"InviteKeyParam":{"name":"invite_key","in":"path","required":true,"schema":{"$ref":"#/components/schemas/InviteKey"},"description":"Invite Key (secret) for the invited user"},"OAuthAccessTokenParam":{"name":"token","in":"path","required":true,"schema":{"$ref":"#/components/schemas/AccessToken"}},"OAuthClientIDParam":{"name":"client_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/OAuthClientID"}},"RecordIDParam":{"name":"record_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/RecordID"},"description":"The Record name"},"TableNameParam":{"name":"table_name","in":"path","required":true,"schema":{"$ref":"#/components/schemas/TableName"},"description":"The Table name"},"UserIDParam":{"name":"user_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/UserID"},"description":"UserID"},"WorkspaceIDParam":{"name":"workspace_id","in":"path","required":true,"schema":{"$ref":"#/components/schemas/WorkspaceID"},"description":"Workspace ID"}},"schemas":{"APIKeyName":{"type":"string","pattern":"[a-zA-Z0-9_\\-~]*","title":"APIKeyName"},"AccessToken":{"type":"string","title":"AccessToken"},"AggExpression":{"description":"The description of a single aggregation operation. It is an object with only one key-value pair.\nThe key represents the aggregation type, while the value is an object with the configuration of\nthe aggregation.\n","oneOf":[{"type":"object","additionalProperties":false,"properties":{"count":{"$ref":"#/components/schemas/CountAgg"}}},{"type":"object","additionalProperties":false,"properties":{"sum":{"$ref":"#/components/schemas/SumAgg"}}},{"type":"object","additionalProperties":false,"properties":{"max":{"$ref":"#/components/schemas/MaxAgg"}}},{"type":"object","additionalProperties":false,"properties":{"min":{"$ref":"#/components/schemas/MinAgg"}}},{"type":"object","additionalProperties":false,"properties":{"average":{"$ref":"#/components/schemas/AverageAgg"}}},{"type":"object","additionalProperties":false,"properties":{"percentiles":{"$ref":"#/components/schemas/PercentilesAgg"}}},{"type":"object","additionalProperties":false,"properties":{"uniqueCount":{"$ref":"#/components/schemas/UniqueCountAgg"}}},{"type":"object","additionalProperties":false,"properties":{"dateHistogram":{"$ref":"#/components/schemas/DateHistogramAgg"}}},{"type":"object","additionalProperties":false,"properties":{"topValues":{"$ref":"#/components/schemas/TopValuesAgg"}}},{"type":"object","additionalProperties":false,"properties":{"numericHistogram":{"$ref":"#/components/schemas/NumericHistogramAgg"}}}]},"AggExpressionMap":{"description":"The description of the aggregations you wish to receive.\n","type":"object","example":{"totalCount":{"count":"*"},"dailyActiveUsers":{"dateHistogram":{"column":"date","interval":"1d","aggs":{"uniqueUsers":{"uniqueCount":{"column":"userID"}}}}}},"additionalProperties":{"$ref":"#/components/schemas/AggExpression"}},"AggResponse":{"oneOf":[{"type":"number","nullable":true},{"type":"object","properties":{"values":{"oneOf":[{"type":"array","items":{"type":"object","properties":{"$key":{"oneOf":[{"type":"string"},{"type":"number"}]},"$count":{"type":"integer"}},"additionalProperties":{"$ref":"#/components/schemas/AggResponse"},"required":["$key","$count"]}},{"type":"object","additionalProperties":{"type":"number"}}]}},"required":["values"]}]},"AuthorizationCodeRequest":{"type":"object","properties":{"state":{"type":"string"},"redirectUri":{"type":"string"},"scopes":{"type":"array","items":{"$ref":"#/components/schemas/OAuthScope"}},"clientId":{"type":"string"},"responseType":{"$ref":"#/components/schemas/OAuthResponseType"}},"required":["clientId","responseType"]},"AuthorizationCodeResponse":{"type":"object","properties":{"state":{"type":"string"},"redirectUri":{"type":"string"},"scopes":{"type":"array","items":{"$ref":"#/components/schemas/OAuthScope"}},"clientId":{"type":"string"},"expires":{"type":"string","format":"date-time","readOnly":true},"code":{"type":"string","readOnly":true}}},"AverageAgg":{"description":"The average of the numeric values in a particular column.","type":"object","properties":{"column":{"description":"The column on which to compute the average. Must be a numeric type.","type":"string"}},"additionalProperties":false,"required":["column"]},"BoosterExpression":{"description":"Booster Expression","oneOf":[{"type":"object","additionalProperties":false,"properties":{"valueBooster":{"$ref":"#/components/schemas/ValueBooster"}}},{"type":"object","additionalProperties":false,"properties":{"numericBooster":{"$ref":"#/components/schemas/NumericBooster"}}},{"type":"object","additionalProperties":false,"properties":{"dateBooster":{"$ref":"#/components/schemas/DateBooster"}}}]},"Branch":{"type":"object","properties":{"name":{"type":"string"},"createdAt":{"$ref":"#/components/schemas/DateTime"}},"additionalProperties":false,"required":["name","createdAt"]},"BranchMetadata":{"description":"","type":"object","properties":{"repository":{"type":"string","minLength":1},"branch":{"$ref":"#/components/schemas/BranchName"},"stage":{"type":"string","minLength":1},"labels":{"type":"array","items":{"type":"string"}}},"example":{"repository":"github.com/my/repository","branch":"feature-login","stage":"testing","labels":["epic-100"]}},"BranchMigration":{"type":"object","properties":{"id":{"type":"string"},"parentID":{"type":"string"},"status":{"type":"string"},"title":{"type":"string"},"lastGitRevision":{"type":"string"},"localChanges":{"type":"boolean"},"createdAt":{"$ref":"#/components/schemas/DateTime"},"newTables":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Table"}},"removedTables":{"type":"array","items":{"type":"string"}},"tableMigrations":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/TableMigration"}},"newTableOrder":{"type":"array","items":{"type":"string"}},"renamedTables":{"type":"array","items":{"$ref":"#/components/schemas/TableRename"}}},"required":["status","localChanges","newTableOrder"],"title":"Migration"},"BranchName":{"type":"string","maxLength":255,"minLength":1,"pattern":"[a-zA-Z0-9_\\-~]+","title":"BranchName"},"BranchOp":{"type":"object","properties":{"id":{"type":"string"},"parentID":{"type":"string"},"title":{"type":"string"},"message":{"type":"string"},"status":{"$ref":"#/components/schemas/MigrationStatus"},"createdAt":{"$ref":"#/components/schemas/DateTime"},"modifiedAt":{"$ref":"#/components/schemas/DateTime"},"migration":{"$ref":"#/components/schemas/Commit"}},"required":["id","status","createdAt"]},"BranchWithCopyID":{"type":"object","properties":{"branchName":{"$ref":"#/components/schemas/BranchName"},"dbBranchID":{"type":"string"},"copyID":{"type":"string"}},"required":["branchName","dbBranchID","copyID"],"title":"BranchWithCopyID"},"Column":{"type":"object","properties":{"name":{"type":"string"},"type":{"type":"string","enum":["bool","int","float","string","text","email","multiple","link","object","datetime","vector","file[]","file","json"]},"link":{"$ref":"#/components/schemas/ColumnLink"},"vector":{"$ref":"#/components/schemas/ColumnVector"},"file":{"$ref":"#/components/schemas/ColumnFile"},"file[]":{"$ref":"#/components/schemas/ColumnFile"},"notNull":{"type":"boolean"},"defaultValue":{"type":"string"},"unique":{"type":"boolean"},"columns":{"type":"array","items":{"$ref":"#/components/schemas/Column"}}},"required":["name","type"],"title":"Column"},"ColumnFile":{"type":"object","properties":{"defaultPublicAccess":{"type":"boolean"}},"additionalProperties":false},"ColumnLink":{"type":"object","properties":{"table":{"type":"string"}},"required":["table"]},"ColumnMigration":{"type":"object","properties":{"old":{"$ref":"#/components/schemas/Column"},"new":{"$ref":"#/components/schemas/Column"}},"required":["old","new"],"title":"ColumnMigration"},"ColumnName":{"type":"string","pattern":"[a-zA-Z0-9_\\-~\\.]+","title":"ColumnName"},"ColumnOpAdd":{"type":"object","properties":{"table":{"type":"string"},"column":{"$ref":"#/components/schemas/Column"}},"required":["table","column"]},"ColumnOpRemove":{"type":"object","properties":{"table":{"type":"string"},"column":{"type":"string"}},"required":["table","column"]},"ColumnOpRename":{"type":"object","properties":{"table":{"type":"string"},"oldName":{"type":"string"},"newName":{"type":"string"}},"required":["table","oldName","newName"]},"ColumnVector":{"type":"object","properties":{"dimension":{"type":"integer","maximum":10000,"minimum":2}},"additionalProperties":false,"required":["dimension"]},"ColumnsProjection":{"type":"array","items":{"type":"string"},"example":["name","email","created_at"]},"Commit":{"type":"object","properties":{"title":{"type":"string"},"message":{"type":"string"},"id":{"type":"string"},"parentID":{"type":"string"},"checksum":{"type":"string"},"mergeParentID":{"type":"string"},"createdAt":{"$ref":"#/components/schemas/DateTime"},"operations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}}},"required":["operations","id","createdAt","checksum"]},"CountAgg":{"description":"Count the number of records with an optional filter.","oneOf":[{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/FilterExpression"}},"additionalProperties":false},{"type":"string","description":"Use this form to count all records without any filter.","enum":["*"]}]},"DBBranch":{"type":"object","properties":{"databaseName":{"$ref":"#/components/schemas/DBName"},"branchName":{"$ref":"#/components/schemas/BranchName"},"createdAt":{"$ref":"#/components/schemas/DateTime"},"id":{"type":"string"},"version":{"type":"number"},"lastMigrationID":{"type":"string"},"metadata":{"$ref":"#/components/schemas/BranchMetadata"},"startedFrom":{"$ref":"#/components/schemas/StartedFromMetadata"},"schema":{"$ref":"#/components/schemas/Schema"}},"required":["databaseName","branchName","createdAt","id","version","lastMigrationID","schema"],"title":"DBBranch"},"DBBranchName":{"description":"The DBBranchName matches the pattern `{db_name}:{branch_name}`.\n","type":"string","maxLength":511,"minLength":1,"pattern":"[a-zA-Z0-9_\\-~]+:[a-zA-Z0-9_\\-~]+","title":"Tuple of database and branch name"},"DBName":{"type":"string","maxLength":255,"minLength":1,"pattern":"[a-zA-Z0-9_\\-~]+","title":"DBName"},"DataInputRecord":{"description":"Xata input record","type":"object","additionalProperties":{"nullable":true,"anyOf":[{"$ref":"#/components/schemas/RecordID"},{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"array","items":{"type":"number"}},{"$ref":"#/components/schemas/DateTime"},{"$ref":"#/components/schemas/ObjectValue"},{"$ref":"#/components/schemas/InputFileArray"},{"$ref":"#/components/schemas/InputFile"}]}},"DatabaseGithubSettings":{"description":"Github repository settings for this database (optional)","type":"object","properties":{"owner":{"description":"Repository owner (user or organization)","type":"string"},"repo":{"description":"Repository name","type":"string"}},"additionalProperties":false,"required":["owner","repo"]},"DatabaseMetadata":{"description":"Metadata of databases","type":"object","properties":{"name":{"description":"The machine-readable name of a database","type":"string"},"region":{"description":"Region where this database is hosted","type":"string"},"createdAt":{"description":"The time this database was created","$ref":"#/components/schemas/DateTime"},"ui":{"description":"Metadata about the database for display in Xata user interfaces","type":"object","properties":{"color":{"description":"The user-selected color for this database across interfaces","type":"string"}}}},"additionalProperties":false,"required":["name","createdAt","region"]},"DateBooster":{"description":"Boost records based on the value of a datetime column. It is configured via \"origin\", \"scale\", and \"decay\". The further away from the \"origin\",\nthe more the score is decayed. The decay function uses an exponential function. For example if origin is \"now\", and scale is 10 days and decay is 0.5, it\nshould be interpreted as: a record with a date 10 days before/after origin will be boosted 2 times less than a record with the date at origin.\nThe result of the exponential function is a boost between 0 and 1. The \"factor\" allows you to control how impactful this boost is, by multiplying it with a given value.\n","properties":{"column":{"description":"The column in which to look for the value.","type":"string"},"origin":{"description":"The datetime (formatted as RFC3339) from where to apply the score decay function. The maximum boost will be applied for records with values at this time.\nIf it is not specified, the current date and time is used.\n","type":"string"},"scale":{"description":"The duration at which distance from origin the score is decayed with factor, using an exponential function. It is formatted as number + units, for example: `5d`, `20m`, `10s`.\n","type":"string","pattern":"^(\\d+)(d|h|m|s|ms)$"},"decay":{"description":"The decay factor to expect at \"scale\" distance from the \"origin\".","type":"number"},"factor":{"description":"The factor with which to multiply the added boost.","type":"number","minimum":0},"ifMatchesFilter":{"description":"Only apply this booster to the records for which the provided filter matches.\n","$ref":"#/components/schemas/FilterExpression"}},"additionalProperties":false,"required":["column","scale","decay"]},"DateHistogramAgg":{"description":"Split data into buckets by a datetime column. Accepts sub-aggregations for each bucket.\n","type":"object","properties":{"column":{"description":"The column to use for bucketing. Must be of type datetime.","type":"string"},"interval":{"description":"The fixed interval to use when bucketing. \nIt is formatted as number + units, for example: `5d`, `20m`, `10s`.\n","type":"string","pattern":"^(\\d+)(d|h|m|s|ms)$"},"calendarInterval":{"description":"The calendar-aware interval to use when bucketing. Possible values are: `minute`,\n`hour`, `day`, `week`, `month`, `quarter`, `year`.\n","type":"string","enum":["minute","hour","day","week","month","quarter","year"]},"timezone":{"description":"The timezone to use for bucketing. By default, UTC is assumed.\nThe accepted format is as an ISO 8601 UTC offset. For example: `+01:00` or\n`-08:00`.\n","type":"string","pattern":"^[+-][01]\\d:[0-5]\\d$"},"aggs":{"$ref":"#/components/schemas/AggExpressionMap"}},"additionalProperties":false,"required":["column"]},"DateTime":{"type":"string","format":"date-time","title":"DateTime"},"FileAccessID":{"description":"File identifier in access URLs","type":"string","maxLength":296,"minLength":88,"pattern":"[a-v0-9=]+","title":"FileID"},"FileItemID":{"description":"Unique file identifier","type":"string","maxLength":255,"minLength":1,"pattern":"[a-zA-Z0-9_-~:]+","title":"FileID"},"FileName":{"description":"File name","type":"string","maxLength":1024,"minLength":0,"pattern":"[0-9a-zA-Z!\\-_\\.\\*'\\(\\)]*"},"FileResponse":{"description":"File metadata","type":"object","properties":{"id":{"$ref":"#/components/schemas/FileItemID"},"name":{"$ref":"#/components/schemas/FileName"},"mediaType":{"$ref":"#/components/schemas/MediaType"},"size":{"type":"integer","format":"int64"},"version":{"type":"integer","format":"int64"},"attributes":{"type":"object"}},"required":["name","mediaType","size","version"]},"FileSignature":{"description":"File signature","type":"string"},"FilterColumn":{"anyOf":[{"$ref":"#/components/schemas/FilterColumnIncludes"},{"$ref":"#/components/schemas/FilterPredicate"},{"$ref":"#/components/schemas/FilterList"}]},"FilterColumnIncludes":{"type":"object","properties":{"$includes":{"$ref":"#/components/schemas/FilterPredicate"},"$includesAny":{"$ref":"#/components/schemas/FilterPredicate"},"$includesAll":{"$ref":"#/components/schemas/FilterPredicate"},"$includesNone":{"$ref":"#/components/schemas/FilterPredicate"}},"additionalProperties":false,"maxProperties":1,"minProperties":1},"FilterExpression":{"type":"object","properties":{"$exists":{"type":"string"},"$existsNot":{"type":"string"},"$any":{"$ref":"#/components/schemas/FilterList"},"$all":{"$ref":"#/components/schemas/FilterList"},"$none":{"$ref":"#/components/schemas/FilterList"},"$not":{"$ref":"#/components/schemas/FilterList"}},"additionalProperties":{"$ref":"#/components/schemas/FilterColumn"},"minProperties":1},"FilterList":{"oneOf":[{"$ref":"#/components/schemas/FilterExpression"},{"type":"array","items":{"$ref":"#/components/schemas/FilterExpression"}}]},"FilterPredicate":{"oneOf":[{"$ref":"#/components/schemas/FilterValue"},{"type":"array","items":{"$ref":"#/components/schemas/FilterPredicate"},"minLength":1},{"$ref":"#/components/schemas/FilterPredicateOp"},{"$ref":"#/components/schemas/FilterPredicateRangeOp"}]},"FilterPredicateOp":{"type":"object","properties":{"$any":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/FilterPredicate"}}]},"$all":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/FilterPredicate"}}]},"$none":{"oneOf":[{"$ref":"#/components/schemas/FilterPredicate"},{"type":"array","items":{"$ref":"#/components/schemas/FilterPredicate"}}]},"$not":{"oneOf":[{"$ref":"#/components/schemas/FilterPredicate"},{"type":"array","items":{"$ref":"#/components/schemas/FilterPredicate"}}]},"$is":{"oneOf":[{"$ref":"#/components/schemas/FilterValue"},{"type":"array","items":{"$ref":"#/components/schemas/FilterValue"}}]},"$isNot":{"oneOf":[{"$ref":"#/components/schemas/FilterValue"},{"type":"array","items":{"$ref":"#/components/schemas/FilterValue"}}]},"$lt":{"$ref":"#/components/schemas/FilterRangeValue"},"$le":{"$ref":"#/components/schemas/FilterRangeValue"},"$gt":{"$ref":"#/components/schemas/FilterRangeValue"},"$ge":{"$ref":"#/components/schemas/FilterRangeValue"},"$contains":{"type":"string"},"$iContains":{"type":"string"},"$startsWith":{"type":"string"},"$endsWith":{"type":"string"},"$pattern":{"type":"string"},"$iPattern":{"type":"string"}},"additionalProperties":false,"maxProperties":1,"minProperties":1},"FilterPredicateRangeOp":{"type":"object","properties":{"$lt":{"$ref":"#/components/schemas/FilterRangeValue"},"$le":{"$ref":"#/components/schemas/FilterRangeValue"},"$gt":{"$ref":"#/components/schemas/FilterRangeValue"},"$ge":{"$ref":"#/components/schemas/FilterRangeValue"}},"additionalProperties":false,"maxProperties":2,"minProperties":2},"FilterRangeValue":{"oneOf":[{"type":"number"},{"type":"string"}]},"FilterValue":{"oneOf":[{"type":"number"},{"type":"string"},{"type":"boolean"}]},"FuzzinessExpression":{"description":"Maximum [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance) for the search terms. The Levenshtein\ndistance is the number of one character changes needed to make two strings equal. The default is 1, meaning that single\ncharacter typos per word are tolerated by search. You can set it to 0 to remove the typo tolerance or set it to 2\nto allow two typos in a word.\n","type":"integer","default":1,"maximum":2,"minimum":0},"HighlightExpression":{"type":"object","properties":{"enabled":{"description":"Set to `false` to disable highlighting. By default it is `true`.\n","type":"boolean"},"encodeHTML":{"description":"Set to `false` to disable HTML encoding in highlight snippets. By default it is `true`.\n","type":"boolean"}},"additionalProperties":false},"InputFile":{"description":"Object representing a file","type":"object","properties":{"name":{"$ref":"#/components/schemas/FileName"},"mediaType":{"$ref":"#/components/schemas/MediaType"},"base64Content":{"description":"Base64 encoded content","type":"string","maxLength":20971520},"enablePublicUrl":{"description":"Enable public access to the file","type":"boolean"},"signedUrlTimeout":{"description":"Time to live for signed URLs","type":"integer"}},"additionalProperties":false,"required":["name"]},"InputFileArray":{"description":"Array of file entries","type":"array","items":{"$ref":"#/components/schemas/InputFileEntry"},"maxItems":50},"InputFileEntry":{"description":"Object representing a file in an array","properties":{"id":{"$ref":"#/components/schemas/FileItemID"},"name":{"$ref":"#/components/schemas/FileName"},"mediaType":{"$ref":"#/components/schemas/MediaType"},"base64Content":{"description":"Base64 encoded content","type":"string","maxLength":20971520},"enablePublicUrl":{"description":"Enable public access to the file","type":"boolean"},"signedUrlTimeout":{"description":"Time to live for signed URLs","type":"integer"}},"additionalProperties":false},"InviteID":{"type":"string","pattern":"[a-zA-Z0-9]+","title":"InviteID"},"InviteKey":{"type":"string","pattern":"^ik_[a-zA-Z0-9]+","title":"InviteKey"},"ListBranchesResponse":{"type":"object","properties":{"databaseName":{"type":"string"},"branches":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}},"additionalProperties":false,"required":["databaseName","branches"]},"ListDatabasesResponse":{"type":"object","properties":{"databases":{"description":"A list of databases in a Xata workspace","type":"array","items":{"$ref":"#/components/schemas/DatabaseMetadata"}}},"required":["databases"]},"ListGitBranchesResponse":{"type":"object","properties":{"mapping":{"type":"array","items":{"type":"object","properties":{"gitBranch":{"type":"string"},"xataBranch":{"type":"string"}},"required":["gitBranch","xataBranch"]}}},"required":["mapping"]},"ListRegionsResponse":{"type":"object","properties":{"regions":{"description":"A list of regions where databases can be created","type":"array","items":{"$ref":"#/components/schemas/Region"}}},"required":["regions"]},"MaxAgg":{"description":"The max of the numeric values in a particular column.","type":"object","properties":{"column":{"description":"The column on which to compute the max. Must be a numeric type.","type":"string"}},"additionalProperties":false,"required":["column"]},"MediaType":{"description":"Media type","type":"string","maxLength":255,"minLength":3,"pattern":"^\\w+/[-+.\\w]+$"},"MetricsDatapoint":{"type":"object","properties":{"timestamp":{"type":"string"},"value":{"type":"integer"}},"required":["timestamp","value"],"title":"Datapoint"},"MetricsLatency":{"type":"object","properties":{"p50":{"type":"array","items":{"$ref":"#/components/schemas/MetricsDatapoint"}},"p90":{"type":"array","items":{"$ref":"#/components/schemas/MetricsDatapoint"}}},"title":"MetricsLatency"},"Migration":{"description":"Branch schema migration.","type":"object","properties":{"parentID":{"type":"string"},"operations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}}},"required":["operations"]},"MigrationColumnOp":{"oneOf":[{"type":"object","additionalProperties":false,"properties":{"addColumn":{"$ref":"#/components/schemas/ColumnOpAdd"}},"required":["addColumn"]},{"type":"object","additionalProperties":false,"properties":{"removeColumn":{"$ref":"#/components/schemas/ColumnOpRemove"}},"required":["removeColumn"]},{"type":"object","additionalProperties":false,"properties":{"renameColumn":{"$ref":"#/components/schemas/ColumnOpRename"}},"required":["renameColumn"]}]},"MigrationObject":{"type":"object","properties":{"title":{"type":"string"},"message":{"type":"string"},"id":{"type":"string"},"parentID":{"type":"string"},"checksum":{"type":"string"},"operations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}}},"required":["operations","id","checksum"]},"MigrationOp":{"description":"Branch schema migration operations.","oneOf":[{"$ref":"#/components/schemas/MigrationTableOp"},{"$ref":"#/components/schemas/MigrationColumnOp"}]},"MigrationRequest":{"type":"object","properties":{"number":{"$ref":"#/components/schemas/MigrationRequestNumber"},"createdAt":{"description":"Migration request creation timestamp.","$ref":"#/components/schemas/DateTime"},"modifiedAt":{"description":"Last modified timestamp.","$ref":"#/components/schemas/DateTime"},"closedAt":{"description":"Timestamp when the migration request was closed.","$ref":"#/components/schemas/DateTime"},"mergedAt":{"description":"Timestamp when the migration request was merged.","$ref":"#/components/schemas/DateTime"},"status":{"type":"string","enum":["open","closed","merging","merged","failed"]},"title":{"description":"The migration request title.","type":"string"},"body":{"description":"The migration request body with detailed description.","type":"string"},"source":{"description":"Name of the source branch.","type":"string"},"target":{"description":"Name of the target branch.","type":"string"}},"additionalProperties":false},"MigrationRequestNumber":{"description":"The migration request number.","type":"integer","minimum":0},"MigrationStatus":{"type":"string","enum":["completed","pending","failed"]},"MigrationTableOp":{"oneOf":[{"type":"object","additionalProperties":false,"properties":{"addTable":{"$ref":"#/components/schemas/TableOpAdd"}},"required":["addTable"]},{"type":"object","additionalProperties":false,"properties":{"removeTable":{"$ref":"#/components/schemas/TableOpRemove"}},"required":["removeTable"]},{"type":"object","additionalProperties":false,"properties":{"renameTable":{"$ref":"#/components/schemas/TableOpRename"}},"required":["renameTable"]}]},"MinAgg":{"description":"The min of the numeric values in a particular column.","type":"object","properties":{"column":{"description":"The column on which to compute the min. Must be a numeric type.","type":"string"}},"additionalProperties":false,"required":["column"]},"NumericBooster":{"description":"Boost records based on the value of a numeric column.","type":"object","properties":{"column":{"description":"The column in which to look for the value.","type":"string"},"factor":{"description":"The factor with which to multiply the value of the column before adding it to the item score.","type":"number"},"modifier":{"description":"Modifier to be applied to the column value, before being multiplied with the factor. The possible values are:\n  - none (default).\n  - log: common logarithm (base 10)\n  - log1p: add 1 then take the common logarithm. This ensures that the value is positive if the\n    value is between 0 and 1.\n  - ln: natural logarithm (base e)\n  - ln1p: add 1 then take the natural logarithm. This ensures that the value is positive if the\n    value is between 0 and 1.\n  - square: raise the value to the power of two.\n  - sqrt: take the square root of the value.\n  - reciprocal: reciprocate the value (if the value is `x`, the reciprocal is `1/x`).\n","type":"string","enum":["none","log","log1p","ln","ln1p","square","sqrt","reciprocal"]},"ifMatchesFilter":{"description":"Only apply this booster to the records for which the provided filter matches.\n","$ref":"#/components/schemas/FilterExpression"}},"additionalProperties":false,"required":["column","factor"]},"NumericHistogramAgg":{"description":"Split data into buckets by dynamic numeric ranges. Accepts sub-aggregations for each bucket.\n","properties":{"column":{"description":"The column to use for bucketing. Must be of numeric type.","type":"string"},"interval":{"description":"The numeric interval to use for bucketing. The resulting buckets will be ranges \nwith this value as size.\n","type":"number","minimum":0},"offset":{"description":"By default the bucket keys start with 0 and then continue in `interval` steps. The bucket\nboundaries can be shifted by using the offset option. For example, if the `interval` is 100,\nbut you prefer the bucket boundaries to be `[50, 150), [150, 250), etc.`, you can set `offset` \nto 50.\n","type":"number","default":0},"aggs":{"$ref":"#/components/schemas/AggExpressionMap"}},"additionalProperties":false,"required":["column","interval"]},"OAuthAccessToken":{"type":"object","properties":{"token":{"type":"string"},"scopes":{"type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"expiresAt":{"type":"string","format":"date-time"},"clientId":{"type":"string"}},"required":["token","scopes","createdAt","updatedAt","expiresAt","clientId"]},"OAuthClientID":{"type":"string"},"OAuthClientPublicDetails":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"icon":{"type":"string"},"clientId":{"type":"string"}},"required":["clientId"]},"OAuthResponseType":{"type":"string","enum":["code"]},"OAuthScope":{"type":"string","enum":["admin:all"]},"ObjectValue":{"description":"Object column value","type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"array","items":{"type":"number"}},{"$ref":"#/components/schemas/DateTime"},{"$ref":"#/components/schemas/ObjectValue"}]}},"PageConfig":{"description":"Pagination settings.","type":"object","properties":{"after":{"description":"Query the next page that follow the cursor.","type":"string"},"before":{"description":"Query the previous page before the cursor.","type":"string"},"start":{"description":"Query the first page from the cursor.","type":"string"},"end":{"description":"Query the last page from the cursor.","type":"string"},"size":{"description":"Set page size. If the size is missing it is read from the cursor. If no cursor is given Xata will choose the default page size.","type":"integer","default":20},"offset":{"description":"Use offset to skip entries. To skip pages set offset to a multiple of size.","type":"integer","default":0}},"title":"PageConfig"},"PercentilesAgg":{"description":"Calculate given percentiles of the numeric values in a particular column.","type":"object","properties":{"column":{"description":"The column on which to compute the average. Must be a numeric type.","type":"string"},"percentiles":{"type":"array","items":{"type":"number"}}},"additionalProperties":false,"required":["column","percentiles"]},"PgRollMigrationStatus":{"type":"string","enum":["no migrations","in progress","complete"]},"PgRollStatusResponse":{"type":"object","properties":{"status":{"description":"The status of the most recent migration","$ref":"#/components/schemas/PgRollMigrationStatus"},"version":{"description":"The name of the most recent version","type":"string"}},"required":["status","version"]},"PrefixExpression":{"description":"If the prefix type is set to \"disabled\" (the default), the search only matches full words. If the prefix type is set to \"phrase\", the search will return results that match prefixes of the search phrase.\n","type":"string","enum":["phrase","disabled"]},"ProjectionConfig":{"description":"A structured projection that allows for some configuration.","type":"object","properties":{"name":{"description":"The name of the column to project or a reverse link specification, see [API Guide](https://xata.io/docs/concepts/data-model#links-and-relations).","type":"string"},"columns":{"$ref":"#/components/schemas/QueryColumnsProjection"},"as":{"description":"An alias for the projected field, this is how it will be returned in the response.","type":"string"},"sort":{"$ref":"#/components/schemas/SortExpression"},"limit":{"type":"integer","default":20},"offset":{"type":"integer","default":0}}},"QueryColumnsProjection":{"type":"array","items":{"oneOf":[{"type":"string"},{"$ref":"#/components/schemas/ProjectionConfig"}]}},"Record":{"description":"Xata Table Record","allOf":[{"$ref":"#/components/schemas/RecordMeta"},{"type":"object","additionalProperties":true}],"title":"Record"},"RecordID":{"type":"string","maxLength":255,"minLength":1,"pattern":"[a-zA-Z0-9_-~:]+","title":"RecordID"},"RecordMeta":{"description":"Xata Table Record Metadata","type":"object","properties":{"id":{"$ref":"#/components/schemas/RecordID"},"xata":{"type":"object","properties":{"version":{"description":"The record's version. Can be used for optimistic concurrency control.","type":"integer"},"createdAt":{"description":"The time when the record was created.","type":"string"},"updatedAt":{"description":"The time when the record was last updated.","type":"string"},"table":{"description":"The record's table name. APIs that return records from multiple tables will set this field accordingly.","type":"string"},"highlight":{"description":"Highlights of the record. This is used by the search APIs to indicate which fields and parts of the fields have matched the search.","type":"object","additionalProperties":{"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"object","additionalProperties":true}]}},"score":{"description":"The record's relevancy score. This is returned by the search APIs.","type":"number"},"warnings":{"description":"Encoding/Decoding errors","type":"array","items":{"type":"string"}}},"required":["version"]}},"required":["id","xata"],"title":"RecordMeta"},"RecordsMetadata":{"description":"Records metadata","type":"object","properties":{"page":{"type":"object","properties":{"cursor":{"description":"last record id","type":"string"},"more":{"description":"true if more records can be fetched","type":"boolean"},"size":{"description":"the number of records returned per page","type":"number"}},"required":["cursor","more","size"]}},"required":["page"]},"Region":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}},"required":["id","name"]},"RevLink":{"type":"object","properties":{"table":{"type":"string"},"column":{"type":"string"}},"required":["table","column"],"title":"RevLink"},"Role":{"type":"string","enum":["owner","maintainer"]},"SQLRecord":{"description":"Xata Table SQL Record","allOf":[{"type":"object","additionalProperties":true}],"title":"SQL Record"},"Schema":{"type":"object","properties":{"tables":{"type":"array","items":{"$ref":"#/components/schemas/Table"}},"tablesOrder":{"type":"array","items":{"type":"string"}}},"required":["tables"],"title":"Schema"},"SchemaEditScript":{"type":"object","properties":{"sourceMigrationID":{"type":"string"},"targetMigrationID":{"type":"string"},"operations":{"type":"array","items":{"$ref":"#/components/schemas/MigrationOp"}}},"required":["operations"],"title":"SchemaEditScript"},"SearchPageConfig":{"description":"Pagination settings for the search endpoints.","properties":{"size":{"description":"Set page size.","type":"integer","default":25,"maximum":200},"offset":{"description":"Use offset to skip entries. To skip pages set offset to a multiple of size.","type":"integer","default":0,"maximum":800}},"title":"SearchPageConfig"},"SortExpression":{"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"object","additionalProperties":{"$ref":"#/components/schemas/SortOrder"}},{"type":"array","items":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/SortOrder"}}}],"title":"SortExpression"},"SortOrder":{"type":"string","enum":["asc","desc","random"],"title":"SortOrder"},"StartedFromMetadata":{"type":"object","properties":{"branchName":{"$ref":"#/components/schemas/BranchName"},"dbBranchID":{"type":"string"},"migrationID":{"type":"string"}},"required":["branchName","dbBranchID","migrationID"],"title":"StartedFromMetadata"},"SumAgg":{"description":"The sum of the numeric values in a particular column.","type":"object","properties":{"column":{"description":"The column on which to compute the sum. Must be a numeric type.","type":"string"}},"additionalProperties":false,"required":["column"]},"SummaryExpression":{"description":"A summary expression is the description of a single summary operation. It consists of a single\nkey representing the operation, and a value representing the column to be operated on.\n\nThe column being summarized cannot be an internal column (id, xata.*), nor the base of\nan object, i.e. if `settings` is an object with `dark_mode` as a field, you may summarize\n`settings.dark_mode` but not `settings` nor `settings.*`.\n\nWe currently support several aggregation functions. Not all functions can be run on all column\ntypes.\n\n  - `count` is used to count the number of records in each group. Use `{\"count\": \"*\"}` to count\n    all columns present, otherwise `{\"count\": \"<column_path>\"}` to count the number of non-null\n    values are present at column path.\n\n    Count can be used on any column type, and always returns an int.\n\n  - `min` calculates the minimum value in each group. `min` is compatible with most types;\n    string, multiple, text, email, int, float, and datetime. It returns a value of the same\n    type as operated on. This means that `{\"lowest_latency\": {\"min\": \"latency\"}}` where\n    `latency` is an int, will always return an int.\n\n  - `max` calculates the maximum value in each group. `max` shares the same compatibility as\n    `min`.\n\n  - `sum` adds up all values in a group. `sum` can be run on `int` and `float` types, and will\n    return a value of the same type as requested.\n\n  - `average` averages all values in a group. `average` can be run on `int` and `float` types, and\n    always returns a float.\n","type":"object","example":{"count":"deleted_at"}},"SummaryExpressionList":{"description":"The description of the summaries you wish to receive. Set each key to be the field name\nyou'd like for the summary. These names must not collide with other columns you've\nrequested from `columns`; including implicit requests like `settings.*`.\n\nThe value for each key needs to be an object. This object should contain one key and one \nvalue only. In this object, the key should be set to the summary function you wish to use\nand the value set to the column name to be summarized.\n\nThe column being summarized cannot be an internal column (id, xata.*), nor the base of\nan object, i.e. if `settings` is an object with `dark_mode` as a field, you may summarize\n`settings.dark_mode` but not `settings` nor `settings.*`.\n","type":"object","example":{"all_users":{"count":"*"},"total_created":{"count":"created_at"},"min_cost":{"min":"cost"},"max_happiness":{"max":"happiness"},"total_revenue":{"sum":"revenue"},"average_speed":{"average":"speed"}},"additionalProperties":{"$ref":"#/components/schemas/SummaryExpression"}},"Table":{"type":"object","properties":{"id":{"type":"string"},"name":{"$ref":"#/components/schemas/TableName"},"columns":{"type":"array","items":{"$ref":"#/components/schemas/Column"}},"revLinks":{"type":"array","items":{"$ref":"#/components/schemas/RevLink"}}},"required":["name","columns"],"title":"Table"},"TableMigration":{"type":"object","properties":{"newColumns":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Column"}},"removedColumns":{"type":"array","items":{"type":"string"}},"modifiedColumns":{"type":"array","items":{"$ref":"#/components/schemas/ColumnMigration"}},"newColumnOrder":{"type":"array","items":{"type":"string"}}},"required":["newColumnOrder"],"title":"TableMigration"},"TableName":{"type":"string","maxLength":255,"minLength":1,"pattern":"[a-zA-Z0-9_\\-~]+","title":"TableName"},"TableOpAdd":{"type":"object","properties":{"table":{"type":"string"}},"required":["table"]},"TableOpRemove":{"type":"object","properties":{"table":{"type":"string"}},"required":["table"]},"TableOpRename":{"type":"object","properties":{"oldName":{"type":"string"},"newName":{"type":"string"}},"required":["oldName","newName"]},"TableRename":{"description":"","type":"object","properties":{"newName":{"type":"string","minLength":1},"oldName":{"type":"string","minLength":1}},"example":{"newName":"newName","oldName":"oldName"},"required":["newName","oldName"]},"TargetExpression":{"description":"The target expression is used to filter the search results by the target columns.\n","type":"array","items":{"oneOf":[{"type":"string"},{"type":"object","properties":{"column":{"description":"The name of the column.","type":"string"},"weight":{"description":"The weight of the column.","type":"number","default":1,"maximum":10,"minimum":1}},"required":["column"],"additionalProperties":false}]}},"TopValuesAgg":{"description":"Split data into buckets by the unique values in a column. Accepts sub-aggregations for each bucket.\nThe top values as ordered by the number of records (`$count`) are returned.\n","properties":{"column":{"description":"The column to use for bucketing. Accepted types are `string`, `email`, `int`, `float`, or `bool`.","type":"string"},"aggs":{"$ref":"#/components/schemas/AggExpressionMap"},"size":{"description":"The maximum number of unique values to return.\n","type":"integer","default":10,"maximum":1000}},"additionalProperties":false,"required":["column"]},"TransactionDeleteOp":{"description":"A delete operation. The transaction will continue if no record matches the ID by default. To override this behaviour, set failIfMissing to true.","type":"object","properties":{"table":{"description":"The table name","type":"string"},"id":{"$ref":"#/components/schemas/RecordID"},"failIfMissing":{"description":"If true, the transaction will fail when the record doesn't exist.","type":"boolean"},"columns":{"description":"If set, the call will return the requested fields as part of the response.","type":"array","items":{"type":"string"}}},"required":["table","id"]},"TransactionError":{"description":"An error message from a failing transaction operation","type":"object","properties":{"index":{"description":"The index of the failing operation","type":"integer"},"message":{"description":"The error message","type":"string"}},"required":["index","message"]},"TransactionFailure":{"description":"An array of errors, with indices, from the transaction.","type":"object","properties":{"id":{"description":"The request ID.","type":"string"},"errors":{"description":"An array of errors from the submitted operations.","type":"array","items":{"$ref":"#/components/schemas/TransactionError"}}},"required":["id","errors"]},"TransactionGetOp":{"description":"Get by id operation.","type":"object","properties":{"table":{"description":"The table name","type":"string"},"id":{"$ref":"#/components/schemas/RecordID"},"columns":{"description":"If set, the call will return the requested fields as part of the response.","type":"array","items":{"type":"string"}}},"required":["table","id"]},"TransactionInsertOp":{"description":"Insert operation","type":"object","properties":{"table":{"description":"The table name","type":"string"},"record":{"description":"The record to insert. The `id` field is optional; when specified, it will be used as the ID for the record.\n","type":"object","additionalProperties":true},"ifVersion":{"description":"The version of the record you expect to be overwriting. Only valid with an\nexplicit ID is also set in the `record` key.\n","type":"integer"},"createOnly":{"description":"createOnly is used to change how Xata acts when an explicit ID is set in the `record` key. \n\nIf `createOnly` is set to `true`, Xata will only attempt to insert the record. If there's a conflict, Xata \nwill cancel the transaction. \n\nIf `createOnly` is set to `false`, Xata will attempt to insert the record. If there's no\nconflict, the record is inserted. If there is a conflict, Xata will replace the record.\n","type":"boolean"},"columns":{"description":"If set, the call will return the requested fields as part of the response.","type":"array","items":{"type":"string"}}},"required":["table","record"]},"TransactionOperation":{"description":"A transaction operation","type":"object","oneOf":[{"type":"object","properties":{"insert":{"$ref":"#/components/schemas/TransactionInsertOp"}},"required":["insert"]},{"type":"object","properties":{"update":{"$ref":"#/components/schemas/TransactionUpdateOp"}},"required":["update"]},{"type":"object","properties":{"delete":{"$ref":"#/components/schemas/TransactionDeleteOp"}},"required":["delete"]},{"type":"object","properties":{"get":{"$ref":"#/components/schemas/TransactionGetOp"}},"required":["get"]}]},"TransactionResultColumns":{"description":"Fields to return in the transaction result.","type":"object","additionalProperties":true},"TransactionResultDelete":{"description":"A result from a delete operation.","type":"object","properties":{"operation":{"description":"The type of operation who's result is being returned.","type":"string","enum":["delete"]},"rows":{"description":"The number of deleted rows","type":"integer"},"columns":{"$ref":"#/components/schemas/TransactionResultColumns"}},"required":["operation","rows"]},"TransactionResultGet":{"description":"A result from a get operation.","type":"object","properties":{"operation":{"description":"The type of operation who's result is being returned.","type":"string","enum":["get"]},"columns":{"$ref":"#/components/schemas/TransactionResultColumns"}},"required":["operation"]},"TransactionResultInsert":{"description":"A result from an insert operation.","type":"object","properties":{"operation":{"description":"The type of operation who's result is being returned.","type":"string","enum":["insert"]},"rows":{"description":"The number of affected rows","type":"integer"},"id":{"$ref":"#/components/schemas/RecordID"},"columns":{"$ref":"#/components/schemas/TransactionResultColumns"}},"required":["operation","rows","id"]},"TransactionResultUpdate":{"description":"A result from an update operation.","type":"object","properties":{"operation":{"description":"The type of operation who's result is being returned.","type":"string","enum":["update"]},"rows":{"description":"The number of updated rows","type":"integer"},"id":{"$ref":"#/components/schemas/RecordID"},"columns":{"$ref":"#/components/schemas/TransactionResultColumns"}},"required":["operation","rows","id"]},"TransactionSuccess":{"description":"An ordered array of results from the submitted operations.","type":"object","properties":{"results":{"type":"array","items":{"oneOf":[{"$ref":"#/components/schemas/TransactionResultInsert"},{"$ref":"#/components/schemas/TransactionResultUpdate"},{"$ref":"#/components/schemas/TransactionResultDelete"},{"$ref":"#/components/schemas/TransactionResultGet"}]}}},"required":["results"]},"TransactionUpdateOp":{"description":"Update operation","type":"object","properties":{"table":{"description":"The table name","type":"string"},"id":{"$ref":"#/components/schemas/RecordID"},"fields":{"description":"The fields of the record you'd like to update","type":"object","additionalProperties":true},"ifVersion":{"description":"The version of the record you expect to be updating","type":"integer"},"upsert":{"description":"Xata will insert this record if it cannot be found.","type":"boolean"},"columns":{"description":"If set, the call will return the requested fields as part of the response.","type":"array","items":{"type":"string"}}},"required":["table","id","fields"]},"UniqueCountAgg":{"description":"Count the number of distinct values in a particular column.","type":"object","properties":{"column":{"description":"The column from where to count the unique values.","type":"string"},"precisionThreshold":{"description":"The threshold under which the unique count is exact. If the number of unique\nvalues in the column is higher than this threshold, the results are approximate.\nMaximum value is 40,000, default value is 3000.\n","type":"integer"}},"additionalProperties":false,"required":["column"]},"User":{"type":"object","properties":{"email":{"type":"string","format":"email"},"fullname":{"type":"string"},"image":{"type":"string"}},"required":["fullname","email","image"]},"UserID":{"type":"string","pattern":"[a-zA-Z0-9_-~:]+","title":"UserID"},"UserWithID":{"allOf":[{"$ref":"#/components/schemas/User"},{"type":"object","properties":{"id":{"$ref":"#/components/schemas/UserID"}},"required":["id"]}]},"ValueBooster":{"description":"Boost records with a particular value for a column.","type":"object","properties":{"column":{"description":"The column in which to look for the value.","type":"string"},"value":{"description":"The exact value to boost.","oneOf":[{"type":"string"},{"type":"number"},{"type":"boolean"}]},"factor":{"description":"The factor with which to multiply the added boost.","type":"number"},"ifMatchesFilter":{"description":"Only apply this booster to the records for which the provided filter matches.\n","$ref":"#/components/schemas/FilterExpression"}},"additionalProperties":false,"required":["column","value","factor"]},"Workspace":{"allOf":[{"$ref":"#/components/schemas/WorkspaceMeta"},{"type":"object","properties":{"id":{"$ref":"#/components/schemas/WorkspaceID"},"memberCount":{"type":"integer"},"plan":{"$ref":"#/components/schemas/WorkspacePlan"}},"required":["id","memberCount","plan"]}]},"WorkspaceID":{"type":"string","pattern":"^([a-zA-Z0-9][a-zA-Z0-9_\\-~]+-)?[a-zA-Z0-9]{6}","title":"WorkspaceID"},"WorkspaceInvite":{"type":"object","properties":{"inviteId":{"$ref":"#/components/schemas/InviteID"},"email":{"type":"string","format":"email"},"expires":{"type":"string","format":"date-time"},"role":{"$ref":"#/components/schemas/Role"}},"required":["inviteId","email","expires","role"]},"WorkspaceMember":{"type":"object","properties":{"userId":{"$ref":"#/components/schemas/UserID"},"fullname":{"type":"string"},"email":{"type":"string","format":"email"},"role":{"$ref":"#/components/schemas/Role"}},"required":["userId","email","fullname","role"]},"WorkspaceMembers":{"type":"object","properties":{"members":{"type":"array","items":{"$ref":"#/components/schemas/WorkspaceMember"}},"invites":{"type":"array","items":{"$ref":"#/components/schemas/WorkspaceInvite"}}},"required":["members","invites"]},"WorkspaceMeta":{"type":"object","properties":{"name":{"type":"string"},"slug":{"type":"string"}},"required":["name"]},"WorkspacePlan":{"type":"string","enum":["free","pro"]}},"responses":{"AggResponse":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"aggs":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/AggResponse"}}},"example":{"aggs":{"dailyUniqueUsers":{"values":[{"$count":321,"$key":"2022-02-22T22:22:22Z","uniqueUsers":134},{"$count":202,"$key":"2022-02-23T22:22:22Z","uniqueUsers":90}]}}}}}}},"AuthError":{"description":"Authentication Error","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"example":{"message":"invalid API key"},"required":["message"]}}}},"BadRequestError":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"required":["message"]}}}},"BranchMigrationPlan":{"description":"Example response","content":{"application/json":{"schema":{"type":"object","properties":{"version":{"type":"integer"},"migration":{"$ref":"#/components/schemas/BranchMigration"}},"required":["version","migration"]}}}},"BulkError":{"description":"Response with multiple errors of the bulk execution","content":{"application/json":{"schema":{"type":"object","properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"status":{"type":"integer"}}}}},"required":["errors"]}}}},"BulkInsertResponse":{"description":"OK","content":{"application/json":{"schema":{"oneOf":[{"type":"object","properties":{"recordIDs":{"type":"array","items":{"type":"string"}}},"required":["recordIDs"]},{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/components/schemas/Record"}}},"required":["records"]}]}}}},"PutFileResponse":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileResponse"}}}},"QueryResponse":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/components/schemas/Record"}},"meta":{"$ref":"#/components/schemas/RecordsMetadata"}},"required":["records","meta"]}}}},"RateLimitError":{"description":"Rate limit exceeded","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"required":["message"]}},"text/event-stream":{"schema":{"type":"string"}}}},"RecordResponse":{"description":"Table Record Reponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Record"}}}},"RecordUpdateResponse":{"description":"Record ID and metadata","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/Record"},{"type":"object","properties":{"id":{"type":"string"},"xata":{"type":"object","properties":{"version":{"type":"integer"},"createdAt":{"type":"string"},"updatedAt":{"type":"string"}},"required":["version","createdAt","updatedAt"]}},"required":["id","xata"]}]}}}},"SQLResponse":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/components/schemas/SQLRecord"}},"columns":{"description":"Name of the column and its PostgreSQL type","allOf":[{"type":"object"}]},"total":{"description":"Number of selected columns","type":"integer"},"warning":{"type":"string"}}}}}},"SchemaCompareResponse":{"description":"Schema comparison response.","content":{"application/json":{"schema":{"type":"object","properties":{"source":{"$ref":"#/components/schemas/Schema"},"target":{"$ref":"#/components/schemas/Schema"},"edits":{"$ref":"#/components/schemas/SchemaEditScript"}},"required":["source","target","edits"]}}}},"SchemaUpdateResponse":{"description":"Schema migration response with ID and migration status.","content":{"application/json":{"schema":{"type":"object","properties":{"migrationID":{"type":"string","minLength":1},"parentMigrationID":{"type":"string"},"status":{"$ref":"#/components/schemas/MigrationStatus"}},"required":["migrationID","parentMigrationID","status"]},"examples":{"example-1":{"value":{"migrationID":"mig_c7m19ilcefoebpqj12p0","parentMigrationID":"mig_c7m19ilcefoebpqj4312","status":"completed"}}}}}},"SearchResponse":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/components/schemas/Record"}},"warning":{"type":"string"},"totalCount":{"description":"The total count of records matched. It will be accurately returned up to 10000 records.","type":"integer"}},"required":["records","totalCount"]}}}},"ServiceUnavailableError":{"description":"ServiceUnavailable","headers":{"Retry-After":{"schema":{"description":"Number of seconds to wait after retrying the operation","type":"string"}}},"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"required":["message"]}}}},"SimpleError":{"description":"Example response","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"required":["message"]}}}},"SummarizeResponse":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"summaries":{"type":"array","items":{"type":"object"}}},"required":["summaries"]}}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer"}}},"tags":[{"name":"Workspaces","description":"Workspaces management","x-displayName":"Workspaces"},{"name":"Users","description":"Users management","x-displayName":"Users"},{"name":"Invites","description":"Manage user invites.","x-displayName":"Invites"},{"name":"Authentication","description":"Authentication and API Key management.","x-displayName":"Authentication"},{"name":"OAuth","x-displayName":"OAuth"},{"name":"auth_other","x-displayName":"other"},{"name":"Databases","description":"Workspace databases management.","x-displayName":"Databases"},{"name":"xbcontrol_other","x-displayName":"other"},{"name":"Database","description":"Database management.","x-displayName":"Database"},{"name":"Branch","description":"Branch management.","x-displayName":"Branch"},{"name":"Migrations","description":"Branch schema migrations and history.","x-displayName":"Migrations"},{"name":"Table","description":"Table management.","x-displayName":"Table"},{"name":"xbregion_other","x-displayName":"other"},{"name":"Records","description":"Record access API.","x-displayName":"Records"},{"name":"Search and Filter","description":"APIs for searching, querying, filtering, and aggregating records.","x-displayName":"Search and Filter"},{"name":"Files","description":"CRUD API for operating on binary content in file and file[] columns.","x-displayName":"Files"},{"name":"xbcell_other","x-displayName":"other"},{"name":"SQL","description":"SQL service access","x-displayName":"SQL"},{"name":"sql_other","x-displayName":"other"}],"x-tagGroups":[{"name":"auth","tags":["Workspaces","Users","Invites","Authentication","OAuth","auth_other"],"description":"Xata.io Auth API"},{"name":"xbcontrol","tags":["Databases","xbcontrol_other"],"description":"Xata.io Xatabases API"},{"name":"xbregion","tags":["Database","Branch","Migrations","Table","Migration Requests","xbregion_other"],"description":"Xata.io Xatabases API"},{"name":"xbcell","tags":["Records","Search and Filter","Files","xbcell_other"],"description":"Xata.io Xatabases API"},{"name":"sql","tags":["SQL","sql_other"],"description":"Xata.io SQL API"}]}