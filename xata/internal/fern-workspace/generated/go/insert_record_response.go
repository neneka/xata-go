// This file was auto-generated by Fern from our API Definition.

package api

//type InsertRecordResponse struct {
//	typeName               string
//	Record                 *Record
//	InsertRecordResponseId *InsertRecordResponseId
//}

type InsertRecordResponse map[string]interface{}

//func NewInsertRecordResponseFromRecord(value *Record) *InsertRecordResponse {
//	return &InsertRecordResponse{typeName: "record", Record: value}
//}
//
//func NewInsertRecordResponseFromInsertRecordResponseId(value *InsertRecordResponseId) *InsertRecordResponse {
//	return &InsertRecordResponse{typeName: "insertRecordResponseId", InsertRecordResponseId: value}
//}
//
//func (i *InsertRecordResponse) UnmarshalJSON(data []byte) error {
//	valueRecord := new(Record)
//	if err := json.Unmarshal(data, &valueRecord); err == nil {
//		i.typeName = "record"
//		i.Record = valueRecord
//		return nil
//	}
//	valueInsertRecordResponseId := new(InsertRecordResponseId)
//	if err := json.Unmarshal(data, &valueInsertRecordResponseId); err == nil {
//		i.typeName = "insertRecordResponseId"
//		i.InsertRecordResponseId = valueInsertRecordResponseId
//		return nil
//	}
//	return fmt.Errorf("%s cannot be deserialized as a %T", data, i)
//}
//
//func (i InsertRecordResponse) MarshalJSON() ([]byte, error) {
//	switch i.typeName {
//	default:
//		return nil, fmt.Errorf("invalid type %s in %T", i.typeName, i)
//	case "record":
//		return json.Marshal(i.Record)
//	case "insertRecordResponseId":
//		return json.Marshal(i.InsertRecordResponseId)
//	}
//}
//
//type InsertRecordResponseVisitor interface {
//	VisitRecord(*Record) error
//	VisitInsertRecordResponseId(*InsertRecordResponseId) error
//}
//
//func (i *InsertRecordResponse) Accept(v InsertRecordResponseVisitor) error {
//	switch i.typeName {
//	default:
//		return fmt.Errorf("invalid type %s in %T", i.typeName, i)
//	case "record":
//		return v.VisitRecord(i.Record)
//	case "insertRecordResponseId":
//		return v.VisitInsertRecordResponseId(i.InsertRecordResponseId)
//	}
//}
