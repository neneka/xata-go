// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

type BulkInsertTableRecordsResponse struct {
	typeName                                string
	BulkInsertTableRecordsResponseRecordIDs *BulkInsertTableRecordsResponseRecordIDs
	BulkInsertTableRecordsResponseRecords   *BulkInsertTableRecordsResponseRecords
}

func NewBulkInsertTableRecordsResponseFromBulkInsertTableRecordsResponseRecordIDs(value *BulkInsertTableRecordsResponseRecordIDs) *BulkInsertTableRecordsResponse {
	return &BulkInsertTableRecordsResponse{typeName: "bulkInsertTableRecordsResponseRecordIDs", BulkInsertTableRecordsResponseRecordIDs: value}
}

func NewBulkInsertTableRecordsResponseFromBulkInsertTableRecordsResponseRecords(value *BulkInsertTableRecordsResponseRecords) *BulkInsertTableRecordsResponse {
	return &BulkInsertTableRecordsResponse{typeName: "bulkInsertTableRecordsResponseRecords", BulkInsertTableRecordsResponseRecords: value}
}

func (b *BulkInsertTableRecordsResponse) UnmarshalJSON(data []byte) error {
	valueBulkInsertTableRecordsResponseRecordIDs := new(BulkInsertTableRecordsResponseRecordIDs)
	if err := json.Unmarshal(data, &valueBulkInsertTableRecordsResponseRecordIDs); err == nil {
		b.typeName = "bulkInsertTableRecordsResponseRecordIDs"
		b.BulkInsertTableRecordsResponseRecordIDs = valueBulkInsertTableRecordsResponseRecordIDs
		return nil
	}
	valueBulkInsertTableRecordsResponseRecords := new(BulkInsertTableRecordsResponseRecords)
	if err := json.Unmarshal(data, &valueBulkInsertTableRecordsResponseRecords); err == nil {
		b.typeName = "bulkInsertTableRecordsResponseRecords"
		b.BulkInsertTableRecordsResponseRecords = valueBulkInsertTableRecordsResponseRecords
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, b)
}

func (b BulkInsertTableRecordsResponse) MarshalJSON() ([]byte, error) {
	switch b.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", b.typeName, b)
	case "bulkInsertTableRecordsResponseRecordIDs":
		return json.Marshal(b.BulkInsertTableRecordsResponseRecordIDs)
	case "bulkInsertTableRecordsResponseRecords":
		return json.Marshal(b.BulkInsertTableRecordsResponseRecords)
	}
}

type BulkInsertTableRecordsResponseVisitor interface {
	VisitBulkInsertTableRecordsResponseRecordIDs(*BulkInsertTableRecordsResponseRecordIDs) error
	VisitBulkInsertTableRecordsResponseRecords(*BulkInsertTableRecordsResponseRecords) error
}

func (b *BulkInsertTableRecordsResponse) Accept(v BulkInsertTableRecordsResponseVisitor) error {
	switch b.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", b.typeName, b)
	case "bulkInsertTableRecordsResponseRecordIDs":
		return v.VisitBulkInsertTableRecordsResponseRecordIDs(b.BulkInsertTableRecordsResponseRecordIDs)
	case "bulkInsertTableRecordsResponseRecords":
		return v.VisitBulkInsertTableRecordsResponseRecords(b.BulkInsertTableRecordsResponseRecords)
	}
}
